/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package doctor_online_booking;

import java.sql.*;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author danus
 */
public class AdminHome extends javax.swing.JFrame {

    /**
     * Creates new form AdminHome
     */
    //create object to database class
    Database db = new Database();
    //calling DBconnect method using object and main connenction class
    Connection con = db.DBConnect();
    String id;

    public AdminHome(String ID) {
        initComponents();
        id = ID;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel16 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel30 = new javax.swing.JLabel();
        jLabel69 = new javax.swing.JLabel();
        jLabel66 = new javax.swing.JLabel();
        jLabel67 = new javax.swing.JLabel();
        jLabel68 = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();
        jLabel65 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jTextField11 = new javax.swing.JTextField();
        jTextField12 = new javax.swing.JTextField();
        jTextField13 = new javax.swing.JTextField();
        jPasswordField3 = new javax.swing.JPasswordField();
        jTextField14 = new javax.swing.JTextField();
        jTextField15 = new javax.swing.JTextField();
        jButton7 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jButton8 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jPasswordField1 = new javax.swing.JPasswordField();
        jTextField4 = new javax.swing.JTextField();
        jTextField5 = new javax.swing.JTextField();
        jTextField6 = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jButton13 = new javax.swing.JButton();
        jButton14 = new javax.swing.JButton();
        jButton15 = new javax.swing.JButton();
        jLabel20 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel27 = new javax.swing.JLabel();
        jTextField7 = new javax.swing.JTextField();
        jPanel17 = new javax.swing.JPanel();
        jButton16 = new javax.swing.JButton();
        jPanel18 = new javax.swing.JPanel();
        jButton41 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox<>();
        jButton17 = new javax.swing.JButton();
        jButton18 = new javax.swing.JButton();
        jTextField8 = new javax.swing.JTextField();
        jTextField9 = new javax.swing.JTextField();
        jTextField10 = new javax.swing.JTextField();
        jTextField16 = new javax.swing.JTextField();
        jTextField17 = new javax.swing.JTextField();
        jTextField18 = new javax.swing.JTextField();
        jPanel19 = new javax.swing.JPanel();
        jButton19 = new javax.swing.JButton();
        jPanel20 = new javax.swing.JPanel();
        jButton42 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jButton20 = new javax.swing.JButton();
        jTextField19 = new javax.swing.JTextField();
        jLabel36 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jButton21 = new javax.swing.JButton();
        jTextField20 = new javax.swing.JTextField();
        jLabel37 = new javax.swing.JLabel();
        jButton22 = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jLabel38 = new javax.swing.JLabel();
        jButton23 = new javax.swing.JButton();
        jTextField21 = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jButton24 = new javax.swing.JButton();
        jButton25 = new javax.swing.JButton();
        jButton26 = new javax.swing.JButton();
        jButton27 = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        jLabel43 = new javax.swing.JLabel();
        jTextField22 = new javax.swing.JTextField();
        jLabel44 = new javax.swing.JLabel();
        jTextField23 = new javax.swing.JTextField();
        jLabel45 = new javax.swing.JLabel();
        jTextField24 = new javax.swing.JTextField();
        jButton28 = new javax.swing.JButton();
        jButton29 = new javax.swing.JButton();
        jButton30 = new javax.swing.JButton();
        jLabel46 = new javax.swing.JLabel();
        jComboBox3 = new javax.swing.JComboBox<>();
        jLabel47 = new javax.swing.JLabel();
        jDateChooser2 = new com.toedter.calendar.JDateChooser();
        jLabel39 = new javax.swing.JLabel();
        jPanel10 = new javax.swing.JPanel();
        jLabel48 = new javax.swing.JLabel();
        jTextField25 = new javax.swing.JTextField();
        jLabel49 = new javax.swing.JLabel();
        jTextField26 = new javax.swing.JTextField();
        jLabel50 = new javax.swing.JLabel();
        jComboBox4 = new javax.swing.JComboBox<>();
        jLabel51 = new javax.swing.JLabel();
        jDateChooser3 = new com.toedter.calendar.JDateChooser();
        jLabel52 = new javax.swing.JLabel();
        jTextField27 = new javax.swing.JTextField();
        jButton31 = new javax.swing.JButton();
        jButton32 = new javax.swing.JButton();
        jButton33 = new javax.swing.JButton();
        jLabel40 = new javax.swing.JLabel();
        jPanel11 = new javax.swing.JPanel();
        jLabel53 = new javax.swing.JLabel();
        jButton34 = new javax.swing.JButton();
        jTextField28 = new javax.swing.JTextField();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable4 = new javax.swing.JTable();
        jButton35 = new javax.swing.JButton();
        jLabel54 = new javax.swing.JLabel();
        jTextField29 = new javax.swing.JTextField();
        jButton36 = new javax.swing.JButton();
        jLabel41 = new javax.swing.JLabel();
        jPanel12 = new javax.swing.JPanel();
        jLabel56 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTable5 = new javax.swing.JTable();
        jButton37 = new javax.swing.JButton();
        jTextField30 = new javax.swing.JTextField();
        jButton38 = new javax.swing.JButton();
        jButton39 = new javax.swing.JButton();
        jButton40 = new javax.swing.JButton();
        jLabel42 = new javax.swing.JLabel();
        jPanel13 = new javax.swing.JPanel();
        jLabel58 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTable6 = new javax.swing.JTable();
        jButton43 = new javax.swing.JButton();
        jTextField31 = new javax.swing.JTextField();
        jButton44 = new javax.swing.JButton();
        jLabel59 = new javax.swing.JLabel();
        jTextField32 = new javax.swing.JTextField();
        jButton45 = new javax.swing.JButton();
        jLabel55 = new javax.swing.JLabel();
        jPanel14 = new javax.swing.JPanel();
        jLabel61 = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        jTable7 = new javax.swing.JTable();
        jButton46 = new javax.swing.JButton();
        jButton48 = new javax.swing.JButton();
        jTextField33 = new javax.swing.JTextField();
        jLabel57 = new javax.swing.JLabel();
        jPanel15 = new javax.swing.JPanel();
        jLabel62 = new javax.swing.JLabel();
        jScrollPane8 = new javax.swing.JScrollPane();
        jTable8 = new javax.swing.JTable();
        jButton47 = new javax.swing.JButton();
        jButton49 = new javax.swing.JButton();
        jTextField34 = new javax.swing.JTextField();
        jComboBox5 = new javax.swing.JComboBox<>();
        jLabel63 = new javax.swing.JLabel();
        jButton50 = new javax.swing.JButton();
        jLabel64 = new javax.swing.JLabel();
        jTextField35 = new javax.swing.JTextField();
        jLabel60 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setPreferredSize(new java.awt.Dimension(870, 564));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel30.setIcon(new javax.swing.ImageIcon(getClass().getResource("/doctor_online_booking/Image/dashbord.png"))); // NOI18N
        jPanel1.add(jLabel30, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 260, 30, 30));

        jLabel69.setIcon(new javax.swing.ImageIcon(getClass().getResource("/doctor_online_booking/Image/customer_25px.png"))); // NOI18N
        jPanel1.add(jLabel69, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 460, 40, 40));

        jLabel66.setIcon(new javax.swing.ImageIcon(getClass().getResource("/doctor_online_booking/Image/addUser.png"))); // NOI18N
        jPanel1.add(jLabel66, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 360, 40, 40));

        jLabel67.setIcon(new javax.swing.ImageIcon(getClass().getResource("/doctor_online_booking/Image/purchase_40px.png"))); // NOI18N
        jPanel1.add(jLabel67, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 410, 40, 40));

        jLabel68.setIcon(new javax.swing.ImageIcon(getClass().getResource("/doctor_online_booking/Image/logout.png"))); // NOI18N
        jPanel1.add(jLabel68, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 530, 40, 30));

        jButton6.setBackground(new java.awt.Color(153, 255, 255));
        jButton6.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jButton6.setForeground(new java.awt.Color(0, 0, 0));
        jButton6.setText("Dashboard");
        jButton6.setBorder(new javax.swing.border.MatteBorder(null));
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton6, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 250, 140, 50));

        jLabel65.setIcon(new javax.swing.ImageIcon(getClass().getResource("/doctor_online_booking/Image/customer_25px.png"))); // NOI18N
        jPanel1.add(jLabel65, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 310, 30, 40));

        jButton1.setBackground(new java.awt.Color(153, 255, 255));
        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jButton1.setForeground(new java.awt.Color(0, 0, 0));
        jButton1.setText("Profile");
        jButton1.setBorder(new javax.swing.border.MatteBorder(null));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 310, 140, 40));

        jButton3.setBackground(new java.awt.Color(153, 255, 255));
        jButton3.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jButton3.setForeground(new java.awt.Color(0, 0, 0));
        jButton3.setText("Doctors");
        jButton3.setBorder(new javax.swing.border.MatteBorder(null));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 360, 140, 40));

        jButton2.setBackground(new java.awt.Color(153, 255, 255));
        jButton2.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jButton2.setForeground(new java.awt.Color(0, 0, 0));
        jButton2.setText("User");
        jButton2.setBorder(new javax.swing.border.MatteBorder(null));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 460, 140, 40));

        jButton4.setBackground(new java.awt.Color(0, 0, 153));
        jButton4.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton4.setForeground(new java.awt.Color(255, 255, 255));
        jButton4.setText("Logout");
        jButton4.setBorder(new javax.swing.border.MatteBorder(null));
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 530, 130, 30));

        jButton5.setBackground(new java.awt.Color(153, 255, 255));
        jButton5.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jButton5.setForeground(new java.awt.Color(0, 0, 0));
        jButton5.setText("Booking");
        jButton5.setBorder(new javax.swing.border.MatteBorder(null));
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 410, 140, 40));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/admin3.png"))); // NOI18N
        jLabel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(-60, 0, 250, 240));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 190, 570));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setForeground(new java.awt.Color(0, 0, 0));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 0, 0));
        jLabel8.setText("Online Appointment Booking");
        jPanel2.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 30, 510, 60));

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 0, 0));
        jLabel9.setText("Healthcare Industry");
        jPanel2.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 90, 390, -1));

        jLabel10.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(0, 0, 0));
        jLabel10.setText("<html> <p>Hospital owners are responsible for overseeing the general administration, finances, and operations of the hospital. They oversee staff, make sure regulations are followed, and uphold strict standards for high-quality treatment. Patients' safety and satisfaction are of utmost importance to owners, who also handle ethical and legal issues, plan for strategic expansion, and interact with the community.\n\n\n</p>  <br>  <br>   \n<p> Keeping a check on a hospital's finances, personnel, and patient care are all part of managing the facility. Managers ensure that resources are allocated properly, quality standards are maintained, and legal obligations are fulfilled. They oversee administrative duties, provide a healthy work environment, work closely with medical professionals, and implement strategic initiatives in addition to putting patients' health and welfare first.</p> </html>");
        jLabel10.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jPanel2.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 180, 650, 350));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/doctor_online_booking/Image/bg6.jpg"))); // NOI18N
        jLabel3.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentHidden(java.awt.event.ComponentEvent evt) {
                jLabel3ComponentHidden(evt);
            }
        });
        jPanel2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 0, 730, 620));

        jTabbedPane1.addTab("tab1", jPanel2);

        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel21.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(0, 0, 0));
        jLabel21.setText("User ID");
        jPanel3.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 120, -1, -1));

        jLabel22.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(0, 0, 0));
        jLabel22.setText("Name");
        jPanel3.add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 170, -1, -1));

        jLabel23.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(0, 0, 0));
        jLabel23.setText("Password");
        jPanel3.add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 220, -1, -1));

        jLabel24.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(0, 0, 0));
        jLabel24.setText("Address");
        jPanel3.add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 270, -1, -1));

        jLabel25.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(0, 0, 0));
        jLabel25.setText("Mobile");
        jPanel3.add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 320, -1, -1));

        jLabel26.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel26.setForeground(new java.awt.Color(0, 0, 0));
        jLabel26.setText("E-mail");
        jPanel3.add(jLabel26, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 370, -1, -1));

        jTextField11.setBackground(new java.awt.Color(255, 255, 255));
        jTextField11.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jTextField11.setForeground(new java.awt.Color(0, 0, 0));
        jPanel3.add(jTextField11, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 370, 260, -1));

        jTextField12.setBackground(new java.awt.Color(255, 255, 255));
        jTextField12.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jTextField12.setForeground(new java.awt.Color(0, 0, 0));
        jPanel3.add(jTextField12, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 320, 260, -1));

        jTextField13.setBackground(new java.awt.Color(255, 255, 255));
        jTextField13.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jTextField13.setForeground(new java.awt.Color(0, 0, 0));
        jPanel3.add(jTextField13, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 270, 260, -1));

        jPasswordField3.setBackground(new java.awt.Color(255, 255, 255));
        jPasswordField3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jPasswordField3.setForeground(new java.awt.Color(0, 0, 0));
        jPanel3.add(jPasswordField3, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 220, 260, -1));

        jTextField14.setBackground(new java.awt.Color(255, 255, 255));
        jTextField14.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jTextField14.setForeground(new java.awt.Color(0, 0, 0));
        jPanel3.add(jTextField14, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 170, 260, -1));

        jTextField15.setBackground(new java.awt.Color(255, 255, 255));
        jTextField15.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jTextField15.setForeground(new java.awt.Color(0, 0, 0));
        jPanel3.add(jTextField15, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 120, 260, -1));

        jButton7.setBackground(new java.awt.Color(153, 255, 255));
        jButton7.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton7.setForeground(new java.awt.Color(0, 0, 0));
        jButton7.setText("Update");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton7, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 430, 100, 50));

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/doctor_online_booking/Image/bg6.jpg"))); // NOI18N
        jLabel4.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentHidden(java.awt.event.ComponentEvent evt) {
                jLabel4ComponentHidden(evt);
            }
        });
        jPanel3.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 750, 620));

        jTabbedPane1.addTab("tab2", jPanel3);

        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton8.setBackground(new java.awt.Color(116, 105, 182));
        jButton8.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton8.setForeground(new java.awt.Color(0, 0, 0));
        jButton8.setText("Search");
        jButton8.setBorder(null);
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        jPanel4.add(jButton8, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 40, 80, 30));
        jPanel4.add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 40, 190, -1));

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(0, 0, 0));
        jLabel11.setText("Current Service Doctors");
        jPanel4.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, -1, -1));

        jTable1.setAutoCreateRowSorter(true);
        jTable1.setBackground(new java.awt.Color(255, 230, 230));
        jTable1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jTable1.setForeground(new java.awt.Color(0, 0, 0));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTable1.setSelectionForeground(new java.awt.Color(255, 230, 230));
        jScrollPane1.setViewportView(jTable1);

        jPanel4.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 130, 630, 200));

        jButton9.setBackground(new java.awt.Color(153, 255, 255));
        jButton9.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton9.setForeground(new java.awt.Color(0, 0, 0));
        jButton9.setText("Delete a Doctor");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });
        jPanel4.add(jButton9, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 400, 170, 40));

        jButton10.setBackground(new java.awt.Color(153, 255, 255));
        jButton10.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton10.setForeground(new java.awt.Color(0, 0, 0));
        jButton10.setText("Update Details");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });
        jPanel4.add(jButton10, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 400, 170, 40));

        jButton11.setBackground(new java.awt.Color(153, 255, 255));
        jButton11.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton11.setForeground(new java.awt.Color(0, 0, 0));
        jButton11.setText("Doctor Availability");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });
        jPanel4.add(jButton11, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 470, 210, 40));

        jButton12.setBackground(new java.awt.Color(153, 255, 255));
        jButton12.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton12.setForeground(new java.awt.Color(0, 0, 0));
        jButton12.setText("New Doctor");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });
        jPanel4.add(jButton12, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 400, 170, 40));

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/doctor_online_booking/Image/bg6.jpg"))); // NOI18N
        jLabel5.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentHidden(java.awt.event.ComponentEvent evt) {
                jLabel5ComponentHidden(evt);
            }
        });
        jPanel4.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 750, 620));

        jTabbedPane1.addTab("tab3", jPanel4);

        jPanel5.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel14.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(0, 0, 0));
        jLabel14.setText("User ID");
        jPanel5.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 50, -1, -1));

        jTextField2.setBackground(new java.awt.Color(255, 255, 255));
        jTextField2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jTextField2.setForeground(new java.awt.Color(0, 0, 0));
        jPanel5.add(jTextField2, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 50, 260, 30));

        jLabel15.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(0, 0, 0));
        jLabel15.setText("Name");
        jPanel5.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 100, -1, -1));

        jTextField3.setBackground(new java.awt.Color(255, 255, 255));
        jTextField3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jTextField3.setForeground(new java.awt.Color(0, 0, 0));
        jPanel5.add(jTextField3, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 100, 260, 30));

        jLabel16.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(0, 0, 0));
        jLabel16.setText("Password");
        jPanel5.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 150, -1, -1));

        jLabel17.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(0, 0, 0));
        jLabel17.setText("Address");
        jPanel5.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 200, -1, -1));

        jPasswordField1.setBackground(new java.awt.Color(255, 255, 255));
        jPasswordField1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jPasswordField1.setForeground(new java.awt.Color(0, 0, 0));
        jPanel5.add(jPasswordField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 150, 260, 30));

        jTextField4.setBackground(new java.awt.Color(255, 255, 255));
        jTextField4.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jTextField4.setForeground(new java.awt.Color(0, 0, 0));
        jPanel5.add(jTextField4, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 200, 260, 30));

        jTextField5.setBackground(new java.awt.Color(255, 255, 255));
        jTextField5.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jTextField5.setForeground(new java.awt.Color(0, 0, 0));
        jPanel5.add(jTextField5, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 250, 260, 30));

        jTextField6.setBackground(new java.awt.Color(255, 255, 255));
        jTextField6.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jTextField6.setForeground(new java.awt.Color(0, 0, 0));
        jPanel5.add(jTextField6, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 350, 260, 30));

        jLabel18.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(0, 0, 0));
        jLabel18.setText("Type");
        jPanel5.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 390, -1, -1));

        jLabel19.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(0, 0, 0));
        jLabel19.setText("Mobile");
        jPanel5.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 250, -1, -1));

        jCheckBox1.setBackground(new java.awt.Color(255, 255, 255));
        jCheckBox1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jCheckBox1.setForeground(new java.awt.Color(0, 0, 0));
        jCheckBox1.setText("Show Password?");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });
        jPanel5.add(jCheckBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 150, 140, -1));

        jButton13.setBackground(new java.awt.Color(153, 255, 255));
        jButton13.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jButton13.setForeground(new java.awt.Color(0, 0, 0));
        jButton13.setText("Clear");
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });
        jPanel5.add(jButton13, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 450, 110, 30));

        jButton14.setBackground(new java.awt.Color(153, 255, 255));
        jButton14.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jButton14.setForeground(new java.awt.Color(0, 0, 0));
        jButton14.setText("Register");
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });
        jPanel5.add(jButton14, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 450, 130, 40));

        jButton15.setBackground(new java.awt.Color(0, 0, 102));
        jButton15.setForeground(new java.awt.Color(0, 0, 0));
        jButton15.setText("Back");
        jButton15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton15ActionPerformed(evt);
            }
        });
        jPanel5.add(jButton15, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 530, 90, 30));

        jLabel20.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(0, 0, 0));
        jLabel20.setText("E-mail");
        jPanel5.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 300, -1, -1));

        jComboBox1.setBackground(new java.awt.Color(255, 255, 255));
        jComboBox1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jComboBox1.setForeground(new java.awt.Color(0, 0, 0));
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "User", "Admin", "Doctor" }));
        jPanel5.add(jComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 396, 250, 30));

        jLabel27.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel27.setForeground(new java.awt.Color(0, 0, 0));
        jLabel27.setText("Specialist");
        jPanel5.add(jLabel27, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 350, -1, -1));

        jTextField7.setBackground(new java.awt.Color(255, 255, 255));
        jTextField7.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jTextField7.setForeground(new java.awt.Color(0, 0, 0));
        jPanel5.add(jTextField7, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 300, 260, 30));

        jPanel17.setBackground(new java.awt.Color(255, 255, 255));
        jPanel17.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton16.setBackground(new java.awt.Color(153, 255, 255));
        jButton16.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jButton16.setForeground(new java.awt.Color(0, 0, 0));
        jButton16.setText("Back");
        jButton16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton16ActionPerformed(evt);
            }
        });
        jPanel17.add(jButton16, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, 90, 30));

        jPanel5.add(jPanel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 480, 90, 40));

        jPanel18.setBackground(new java.awt.Color(255, 255, 255));
        jPanel18.setLayout(new java.awt.BorderLayout());

        jButton41.setBackground(new java.awt.Color(153, 255, 255));
        jButton41.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton41.setForeground(new java.awt.Color(0, 0, 0));
        jButton41.setText("Back to User");
        jButton41.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton41ActionPerformed(evt);
            }
        });
        jPanel18.add(jButton41, java.awt.BorderLayout.CENTER);

        jPanel5.add(jPanel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 480, 160, 50));

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/doctor_online_booking/Image/bg6.jpg"))); // NOI18N
        jLabel6.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentHidden(java.awt.event.ComponentEvent evt) {
                jLabel6ComponentHidden(evt);
            }
        });
        jPanel5.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 750, 620));

        jTabbedPane1.addTab("tab4", jPanel5);

        jPanel6.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel28.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel28.setForeground(new java.awt.Color(0, 0, 0));
        jLabel28.setText("ID");
        jPanel6.add(jLabel28, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 50, -1, -1));

        jLabel29.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel29.setForeground(new java.awt.Color(0, 0, 0));
        jLabel29.setText("Name");
        jPanel6.add(jLabel29, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 100, -1, -1));

        jLabel31.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel31.setForeground(new java.awt.Color(0, 0, 0));
        jLabel31.setText("Address");
        jPanel6.add(jLabel31, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 160, -1, -1));

        jLabel32.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel32.setForeground(new java.awt.Color(0, 0, 0));
        jLabel32.setText("Mobile");
        jPanel6.add(jLabel32, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 210, -1, -1));

        jLabel33.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel33.setForeground(new java.awt.Color(0, 0, 0));
        jLabel33.setText("E-mail");
        jPanel6.add(jLabel33, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 260, -1, -1));

        jLabel34.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel34.setForeground(new java.awt.Color(0, 0, 0));
        jLabel34.setText("Specialist");
        jPanel6.add(jLabel34, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 310, -1, -1));

        jLabel35.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel35.setForeground(new java.awt.Color(0, 0, 0));
        jLabel35.setText("Type");
        jPanel6.add(jLabel35, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 360, -1, -1));

        jComboBox2.setBackground(new java.awt.Color(255, 255, 255));
        jComboBox2.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jComboBox2.setForeground(new java.awt.Color(0, 0, 0));
        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "User", "Admin", "Doctor" }));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });
        jPanel6.add(jComboBox2, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 360, 250, 30));

        jButton17.setBackground(new java.awt.Color(153, 255, 255));
        jButton17.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jButton17.setForeground(new java.awt.Color(0, 0, 0));
        jButton17.setText("Clear");
        jButton17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton17ActionPerformed(evt);
            }
        });
        jPanel6.add(jButton17, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 410, 110, 30));

        jButton18.setBackground(new java.awt.Color(153, 255, 255));
        jButton18.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jButton18.setForeground(new java.awt.Color(0, 0, 0));
        jButton18.setText("Update");
        jButton18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton18ActionPerformed(evt);
            }
        });
        jPanel6.add(jButton18, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 410, 130, 40));

        jTextField8.setBackground(new java.awt.Color(255, 255, 255));
        jTextField8.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jTextField8.setForeground(new java.awt.Color(0, 0, 0));
        jTextField8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField8ActionPerformed(evt);
            }
        });
        jPanel6.add(jTextField8, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 310, 260, 30));

        jTextField9.setBackground(new java.awt.Color(255, 255, 255));
        jTextField9.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jTextField9.setForeground(new java.awt.Color(0, 0, 0));
        jPanel6.add(jTextField9, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 260, 260, 30));

        jTextField10.setBackground(new java.awt.Color(255, 255, 255));
        jTextField10.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jTextField10.setForeground(new java.awt.Color(0, 0, 0));
        jPanel6.add(jTextField10, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 210, 260, 30));

        jTextField16.setBackground(new java.awt.Color(255, 255, 255));
        jTextField16.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jTextField16.setForeground(new java.awt.Color(0, 0, 0));
        jPanel6.add(jTextField16, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 160, 260, 30));

        jTextField17.setBackground(new java.awt.Color(255, 255, 255));
        jTextField17.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jTextField17.setForeground(new java.awt.Color(0, 0, 0));
        jPanel6.add(jTextField17, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 100, 260, 30));

        jTextField18.setBackground(new java.awt.Color(255, 255, 255));
        jTextField18.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jTextField18.setForeground(new java.awt.Color(0, 0, 0));
        jPanel6.add(jTextField18, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 50, 260, 30));

        jPanel19.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton19.setBackground(new java.awt.Color(153, 255, 255));
        jButton19.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jButton19.setForeground(new java.awt.Color(0, 0, 0));
        jButton19.setText("Back");
        jButton19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton19ActionPerformed(evt);
            }
        });
        jPanel19.add(jButton19, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 110, 30));

        jPanel6.add(jPanel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 460, 110, 30));

        jPanel20.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton42.setBackground(new java.awt.Color(153, 255, 255));
        jButton42.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jButton42.setForeground(new java.awt.Color(0, 0, 0));
        jButton42.setText("Back to User");
        jButton42.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton42ActionPerformed(evt);
            }
        });
        jPanel20.add(jButton42, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 180, 30));

        jPanel6.add(jPanel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 460, 180, 30));

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/doctor_online_booking/Image/bg6.jpg"))); // NOI18N
        jLabel7.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentHidden(java.awt.event.ComponentEvent evt) {
                jLabel7ComponentHidden(evt);
            }
        });
        jPanel6.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 750, 620));

        jTabbedPane1.addTab("tab5", jPanel6);

        jPanel7.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton20.setBackground(new java.awt.Color(116, 105, 182));
        jButton20.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton20.setForeground(new java.awt.Color(0, 0, 0));
        jButton20.setText("Search");
        jButton20.setBorder(null);
        jButton20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton20ActionPerformed(evt);
            }
        });
        jPanel7.add(jButton20, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 40, 80, 30));
        jPanel7.add(jTextField19, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 40, 190, -1));

        jLabel36.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel36.setForeground(new java.awt.Color(0, 0, 0));
        jLabel36.setText("Current Service Doctors");
        jPanel7.add(jLabel36, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, -1, -1));

        jTable2.setAutoCreateRowSorter(true);
        jTable2.setBackground(new java.awt.Color(255, 230, 230));
        jTable2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jTable2.setForeground(new java.awt.Color(0, 0, 0));
        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTable2.setSelectionForeground(new java.awt.Color(255, 230, 230));
        jScrollPane2.setViewportView(jTable2);

        jPanel7.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 130, 630, 200));

        jButton21.setBackground(new java.awt.Color(153, 255, 255));
        jButton21.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton21.setForeground(new java.awt.Color(0, 0, 0));
        jButton21.setText("Delete a Doctor");
        jButton21.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton21ActionPerformed(evt);
            }
        });
        jPanel7.add(jButton21, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 460, 170, 40));
        jPanel7.add(jTextField20, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 400, 190, -1));

        jLabel37.setBackground(new java.awt.Color(255, 255, 255));
        jLabel37.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel37.setForeground(new java.awt.Color(0, 0, 0));
        jLabel37.setText("Doctor Id");
        jPanel7.add(jLabel37, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 400, -1, -1));

        jButton22.setBackground(new java.awt.Color(153, 255, 255));
        jButton22.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jButton22.setForeground(new java.awt.Color(0, 0, 0));
        jButton22.setText("Back");
        jButton22.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton22ActionPerformed(evt);
            }
        });
        jPanel7.add(jButton22, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 500, 110, 30));

        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/doctor_online_booking/Image/bg6.jpg"))); // NOI18N
        jLabel12.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentHidden(java.awt.event.ComponentEvent evt) {
                jLabel12ComponentHidden(evt);
            }
        });
        jPanel7.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 750, 620));

        jTabbedPane1.addTab("tab6", jPanel7);

        jPanel8.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel38.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel38.setForeground(new java.awt.Color(0, 0, 0));
        jLabel38.setText("Doctors Available Date");
        jPanel8.add(jLabel38, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 80, -1, -1));

        jButton23.setBackground(new java.awt.Color(116, 105, 182));
        jButton23.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton23.setForeground(new java.awt.Color(0, 0, 0));
        jButton23.setText("Search");
        jButton23.setBorder(null);
        jButton23.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton23ActionPerformed(evt);
            }
        });
        jPanel8.add(jButton23, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 60, 80, 30));
        jPanel8.add(jTextField21, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 60, 190, -1));

        jTable3.setAutoCreateRowSorter(true);
        jTable3.setBackground(new java.awt.Color(255, 230, 230));
        jTable3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jTable3.setForeground(new java.awt.Color(0, 0, 0));
        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane3.setViewportView(jTable3);

        jPanel8.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 130, 630, 160));

        jButton24.setBackground(new java.awt.Color(153, 255, 255));
        jButton24.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jButton24.setForeground(new java.awt.Color(0, 0, 0));
        jButton24.setText("Back");
        jButton24.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton24ActionPerformed(evt);
            }
        });
        jPanel8.add(jButton24, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 500, 110, 30));

        jButton25.setBackground(new java.awt.Color(153, 255, 255));
        jButton25.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton25.setForeground(new java.awt.Color(0, 0, 0));
        jButton25.setText("New");
        jButton25.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton25ActionPerformed(evt);
            }
        });
        jPanel8.add(jButton25, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 400, 170, 40));

        jButton26.setBackground(new java.awt.Color(153, 255, 255));
        jButton26.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton26.setForeground(new java.awt.Color(0, 0, 0));
        jButton26.setText("Update Details");
        jButton26.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton26ActionPerformed(evt);
            }
        });
        jPanel8.add(jButton26, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 400, 170, 40));

        jButton27.setBackground(new java.awt.Color(153, 255, 255));
        jButton27.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton27.setForeground(new java.awt.Color(0, 0, 0));
        jButton27.setText("Delete ");
        jButton27.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton27ActionPerformed(evt);
            }
        });
        jPanel8.add(jButton27, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 400, 170, 40));

        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/doctor_online_booking/Image/bg6.jpg"))); // NOI18N
        jLabel13.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentHidden(java.awt.event.ComponentEvent evt) {
                jLabel13ComponentHidden(evt);
            }
        });
        jPanel8.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 750, 620));

        jTabbedPane1.addTab("tab7", jPanel8);

        jPanel9.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel43.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel43.setForeground(new java.awt.Color(0, 0, 0));
        jLabel43.setText("ID");
        jPanel9.add(jLabel43, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 70, -1, -1));

        jTextField22.setBackground(new java.awt.Color(255, 255, 255));
        jTextField22.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jTextField22.setForeground(new java.awt.Color(0, 0, 0));
        jPanel9.add(jTextField22, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 60, 260, 30));

        jLabel44.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel44.setForeground(new java.awt.Color(0, 0, 0));
        jLabel44.setText("Available Date");
        jPanel9.add(jLabel44, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 260, -1, -1));

        jTextField23.setBackground(new java.awt.Color(255, 255, 255));
        jTextField23.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jTextField23.setForeground(new java.awt.Color(0, 0, 0));
        jPanel9.add(jTextField23, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 130, 260, 30));

        jLabel45.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel45.setForeground(new java.awt.Color(0, 0, 0));
        jLabel45.setText("Specialist");
        jPanel9.add(jLabel45, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 320, -1, -1));

        jTextField24.setBackground(new java.awt.Color(255, 255, 255));
        jTextField24.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jTextField24.setForeground(new java.awt.Color(0, 0, 0));
        jPanel9.add(jTextField24, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 320, 260, 30));

        jButton28.setBackground(new java.awt.Color(153, 255, 255));
        jButton28.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jButton28.setForeground(new java.awt.Color(0, 0, 0));
        jButton28.setText("Back");
        jButton28.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton28ActionPerformed(evt);
            }
        });
        jPanel9.add(jButton28, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 460, 110, 30));

        jButton29.setBackground(new java.awt.Color(153, 255, 255));
        jButton29.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jButton29.setForeground(new java.awt.Color(0, 0, 0));
        jButton29.setText("ADD");
        jButton29.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton29ActionPerformed(evt);
            }
        });
        jPanel9.add(jButton29, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 390, 130, 40));

        jButton30.setBackground(new java.awt.Color(153, 255, 255));
        jButton30.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jButton30.setForeground(new java.awt.Color(0, 0, 0));
        jButton30.setText("Clear");
        jButton30.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton30ActionPerformed(evt);
            }
        });
        jPanel9.add(jButton30, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 400, 110, 30));

        jLabel46.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel46.setForeground(new java.awt.Color(0, 0, 0));
        jLabel46.setText("Doctor Name");
        jPanel9.add(jLabel46, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 130, -1, -1));

        jComboBox3.setBackground(new java.awt.Color(255, 255, 255));
        jComboBox3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jComboBox3.setForeground(new java.awt.Color(0, 0, 0));
        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "Available", "Not_Available" }));
        jPanel9.add(jComboBox3, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 190, 250, 30));

        jLabel47.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel47.setForeground(new java.awt.Color(0, 0, 0));
        jLabel47.setText("Available Status");
        jPanel9.add(jLabel47, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 190, -1, -1));

        jDateChooser2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel9.add(jDateChooser2, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 260, 260, 30));

        jLabel39.setIcon(new javax.swing.ImageIcon(getClass().getResource("/doctor_online_booking/Image/bg6.jpg"))); // NOI18N
        jLabel39.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentHidden(java.awt.event.ComponentEvent evt) {
                jLabel39ComponentHidden(evt);
            }
        });
        jPanel9.add(jLabel39, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 750, 620));

        jTabbedPane1.addTab("tab8", jPanel9);

        jPanel10.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel48.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel48.setForeground(new java.awt.Color(0, 0, 0));
        jLabel48.setText("ID");
        jPanel10.add(jLabel48, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 70, -1, -1));

        jTextField25.setBackground(new java.awt.Color(255, 255, 255));
        jTextField25.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jTextField25.setForeground(new java.awt.Color(0, 0, 0));
        jPanel10.add(jTextField25, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 60, 260, 30));

        jLabel49.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel49.setForeground(new java.awt.Color(0, 0, 0));
        jLabel49.setText("Doctor Name");
        jPanel10.add(jLabel49, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 130, -1, -1));

        jTextField26.setBackground(new java.awt.Color(255, 255, 255));
        jTextField26.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jTextField26.setForeground(new java.awt.Color(0, 0, 0));
        jPanel10.add(jTextField26, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 130, 260, 30));

        jLabel50.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel50.setForeground(new java.awt.Color(0, 0, 0));
        jLabel50.setText("Available Status");
        jPanel10.add(jLabel50, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 190, -1, -1));

        jComboBox4.setBackground(new java.awt.Color(255, 255, 255));
        jComboBox4.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jComboBox4.setForeground(new java.awt.Color(0, 0, 0));
        jComboBox4.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "Available", "Not_Available" }));
        jPanel10.add(jComboBox4, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 190, 250, 30));

        jLabel51.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel51.setForeground(new java.awt.Color(0, 0, 0));
        jLabel51.setText("Available Date");
        jPanel10.add(jLabel51, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 260, -1, -1));

        jDateChooser3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel10.add(jDateChooser3, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 260, 260, 30));

        jLabel52.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel52.setForeground(new java.awt.Color(0, 0, 0));
        jLabel52.setText("Specialist");
        jPanel10.add(jLabel52, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 320, -1, -1));

        jTextField27.setBackground(new java.awt.Color(255, 255, 255));
        jTextField27.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jTextField27.setForeground(new java.awt.Color(0, 0, 0));
        jPanel10.add(jTextField27, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 320, 260, 30));

        jButton31.setBackground(new java.awt.Color(153, 255, 255));
        jButton31.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jButton31.setForeground(new java.awt.Color(0, 0, 0));
        jButton31.setText("Clear");
        jButton31.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton31ActionPerformed(evt);
            }
        });
        jPanel10.add(jButton31, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 400, 110, 30));

        jButton32.setBackground(new java.awt.Color(153, 255, 255));
        jButton32.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jButton32.setForeground(new java.awt.Color(0, 0, 0));
        jButton32.setText("Update");
        jButton32.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton32ActionPerformed(evt);
            }
        });
        jPanel10.add(jButton32, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 390, 130, 40));

        jButton33.setBackground(new java.awt.Color(153, 255, 255));
        jButton33.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jButton33.setForeground(new java.awt.Color(0, 0, 0));
        jButton33.setText("Back");
        jButton33.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton33ActionPerformed(evt);
            }
        });
        jPanel10.add(jButton33, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 460, 110, 30));

        jLabel40.setIcon(new javax.swing.ImageIcon(getClass().getResource("/doctor_online_booking/Image/bg6.jpg"))); // NOI18N
        jLabel40.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentHidden(java.awt.event.ComponentEvent evt) {
                jLabel40ComponentHidden(evt);
            }
        });
        jPanel10.add(jLabel40, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 750, 620));

        jTabbedPane1.addTab("tab9", jPanel10);

        jPanel11.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel53.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel53.setForeground(new java.awt.Color(0, 0, 0));
        jLabel53.setText("Doctors Available Date");
        jPanel11.add(jLabel53, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 80, -1, -1));

        jButton34.setBackground(new java.awt.Color(116, 105, 182));
        jButton34.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton34.setForeground(new java.awt.Color(0, 0, 0));
        jButton34.setText("Search");
        jButton34.setBorder(null);
        jButton34.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton34ActionPerformed(evt);
            }
        });
        jPanel11.add(jButton34, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 60, 80, 30));

        jTextField28.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField28ActionPerformed(evt);
            }
        });
        jPanel11.add(jTextField28, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 60, 190, -1));

        jTable4.setAutoCreateRowSorter(true);
        jTable4.setBackground(new java.awt.Color(255, 230, 230));
        jTable4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jTable4.setForeground(new java.awt.Color(0, 0, 0));
        jTable4.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane4.setViewportView(jTable4);

        jPanel11.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 130, 630, 160));

        jButton35.setBackground(new java.awt.Color(153, 255, 255));
        jButton35.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jButton35.setForeground(new java.awt.Color(0, 0, 0));
        jButton35.setText("Back");
        jButton35.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton35ActionPerformed(evt);
            }
        });
        jPanel11.add(jButton35, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 460, 110, 30));

        jLabel54.setBackground(new java.awt.Color(255, 255, 255));
        jLabel54.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel54.setForeground(new java.awt.Color(0, 0, 0));
        jLabel54.setText("Doctor Id");
        jPanel11.add(jLabel54, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 350, -1, -1));
        jPanel11.add(jTextField29, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 350, 190, -1));

        jButton36.setBackground(new java.awt.Color(153, 255, 255));
        jButton36.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton36.setForeground(new java.awt.Color(0, 0, 0));
        jButton36.setText("Delete");
        jButton36.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton36ActionPerformed(evt);
            }
        });
        jPanel11.add(jButton36, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 400, 140, 40));

        jLabel41.setIcon(new javax.swing.ImageIcon(getClass().getResource("/doctor_online_booking/Image/bg6.jpg"))); // NOI18N
        jLabel41.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentHidden(java.awt.event.ComponentEvent evt) {
                jLabel41ComponentHidden(evt);
            }
        });
        jPanel11.add(jLabel41, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 750, 620));

        jTabbedPane1.addTab("tab10", jPanel11);

        jPanel12.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel56.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel56.setForeground(new java.awt.Color(0, 0, 0));
        jLabel56.setText("Current Users");
        jPanel12.add(jLabel56, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 80, -1, -1));

        jTable5.setAutoCreateRowSorter(true);
        jTable5.setBackground(new java.awt.Color(255, 230, 230));
        jTable5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jTable5.setForeground(new java.awt.Color(0, 0, 0));
        jTable5.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTable5.setSelectionForeground(new java.awt.Color(255, 230, 230));
        jScrollPane5.setViewportView(jTable5);

        jPanel12.add(jScrollPane5, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 130, 630, 200));

        jButton37.setBackground(new java.awt.Color(116, 105, 182));
        jButton37.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton37.setForeground(new java.awt.Color(0, 0, 0));
        jButton37.setText("Search");
        jButton37.setBorder(null);
        jButton37.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton37ActionPerformed(evt);
            }
        });
        jPanel12.add(jButton37, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 40, 80, 30));
        jPanel12.add(jTextField30, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 40, 190, -1));

        jButton38.setBackground(new java.awt.Color(153, 255, 255));
        jButton38.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton38.setForeground(new java.awt.Color(0, 0, 0));
        jButton38.setText("New User");
        jButton38.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton38ActionPerformed(evt);
            }
        });
        jPanel12.add(jButton38, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 400, 170, 40));

        jButton39.setBackground(new java.awt.Color(153, 255, 255));
        jButton39.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton39.setForeground(new java.awt.Color(0, 0, 0));
        jButton39.setText("Update Details");
        jButton39.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton39ActionPerformed(evt);
            }
        });
        jPanel12.add(jButton39, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 400, 170, 40));

        jButton40.setBackground(new java.awt.Color(153, 255, 255));
        jButton40.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton40.setForeground(new java.awt.Color(0, 0, 0));
        jButton40.setText("Delete a User");
        jButton40.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton40ActionPerformed(evt);
            }
        });
        jPanel12.add(jButton40, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 400, 170, 40));

        jLabel42.setIcon(new javax.swing.ImageIcon(getClass().getResource("/doctor_online_booking/Image/bg6.jpg"))); // NOI18N
        jLabel42.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentHidden(java.awt.event.ComponentEvent evt) {
                jLabel42ComponentHidden(evt);
            }
        });
        jPanel12.add(jLabel42, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 750, 620));

        jTabbedPane1.addTab("tab11", jPanel12);

        jPanel13.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel58.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel58.setForeground(new java.awt.Color(0, 0, 0));
        jLabel58.setText("Current Users");
        jPanel13.add(jLabel58, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 80, -1, -1));

        jTable6.setAutoCreateRowSorter(true);
        jTable6.setBackground(new java.awt.Color(255, 230, 230));
        jTable6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jTable6.setForeground(new java.awt.Color(0, 0, 0));
        jTable6.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTable6.setSelectionForeground(new java.awt.Color(255, 230, 230));
        jScrollPane6.setViewportView(jTable6);

        jPanel13.add(jScrollPane6, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 130, 630, 200));

        jButton43.setBackground(new java.awt.Color(116, 105, 182));
        jButton43.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton43.setForeground(new java.awt.Color(0, 0, 0));
        jButton43.setText("Search");
        jButton43.setBorder(null);
        jButton43.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton43ActionPerformed(evt);
            }
        });
        jPanel13.add(jButton43, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 40, 80, 30));
        jPanel13.add(jTextField31, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 40, 190, -1));

        jButton44.setBackground(new java.awt.Color(153, 255, 255));
        jButton44.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton44.setForeground(new java.awt.Color(0, 0, 0));
        jButton44.setText("Delete a User");
        jButton44.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton44ActionPerformed(evt);
            }
        });
        jPanel13.add(jButton44, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 400, 170, 40));

        jLabel59.setBackground(new java.awt.Color(255, 255, 255));
        jLabel59.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel59.setForeground(new java.awt.Color(0, 0, 0));
        jLabel59.setText("User Id");
        jPanel13.add(jLabel59, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 350, -1, -1));
        jPanel13.add(jTextField32, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 350, 190, -1));

        jButton45.setBackground(new java.awt.Color(153, 255, 255));
        jButton45.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jButton45.setForeground(new java.awt.Color(0, 0, 0));
        jButton45.setText("Back");
        jButton45.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton45ActionPerformed(evt);
            }
        });
        jPanel13.add(jButton45, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 460, 110, 30));

        jLabel55.setIcon(new javax.swing.ImageIcon(getClass().getResource("/doctor_online_booking/Image/bg6.jpg"))); // NOI18N
        jLabel55.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentHidden(java.awt.event.ComponentEvent evt) {
                jLabel55ComponentHidden(evt);
            }
        });
        jPanel13.add(jLabel55, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 750, 620));

        jTabbedPane1.addTab("tab12", jPanel13);

        jPanel14.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel61.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel61.setForeground(new java.awt.Color(0, 0, 0));
        jLabel61.setText("Bookings");
        jPanel14.add(jLabel61, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 110, -1, -1));

        jTable7.setAutoCreateRowSorter(true);
        jTable7.setBackground(new java.awt.Color(255, 230, 230));
        jTable7.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jTable7.setForeground(new java.awt.Color(0, 0, 0));
        jTable7.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTable7.setSelectionForeground(new java.awt.Color(255, 230, 230));
        jScrollPane7.setViewportView(jTable7);

        jPanel14.add(jScrollPane7, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 150, 630, 170));

        jButton46.setBackground(new java.awt.Color(153, 255, 255));
        jButton46.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton46.setForeground(new java.awt.Color(0, 0, 0));
        jButton46.setText("Update Status");
        jButton46.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton46ActionPerformed(evt);
            }
        });
        jPanel14.add(jButton46, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 370, 170, 40));

        jButton48.setBackground(new java.awt.Color(116, 105, 182));
        jButton48.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton48.setForeground(new java.awt.Color(0, 0, 0));
        jButton48.setText("Search");
        jButton48.setBorder(null);
        jButton48.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton48ActionPerformed(evt);
            }
        });
        jPanel14.add(jButton48, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 40, 80, 30));
        jPanel14.add(jTextField33, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 40, 190, -1));

        jLabel57.setIcon(new javax.swing.ImageIcon(getClass().getResource("/doctor_online_booking/Image/bg6.jpg"))); // NOI18N
        jLabel57.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentHidden(java.awt.event.ComponentEvent evt) {
                jLabel57ComponentHidden(evt);
            }
        });
        jPanel14.add(jLabel57, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 750, 620));

        jTabbedPane1.addTab("tab13", jPanel14);

        jPanel15.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel62.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel62.setForeground(new java.awt.Color(0, 0, 0));
        jLabel62.setText("Bookings");
        jPanel15.add(jLabel62, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 110, -1, -1));

        jTable8.setAutoCreateRowSorter(true);
        jTable8.setBackground(new java.awt.Color(255, 230, 230));
        jTable8.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jTable8.setForeground(new java.awt.Color(0, 0, 0));
        jTable8.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTable8.setSelectionForeground(new java.awt.Color(255, 230, 230));
        jScrollPane8.setViewportView(jTable8);

        jPanel15.add(jScrollPane8, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 150, 630, 170));

        jButton47.setBackground(new java.awt.Color(153, 255, 255));
        jButton47.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton47.setForeground(new java.awt.Color(0, 0, 0));
        jButton47.setText("Update Status");
        jButton47.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton47ActionPerformed(evt);
            }
        });
        jPanel15.add(jButton47, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 410, 170, 40));

        jButton49.setBackground(new java.awt.Color(116, 105, 182));
        jButton49.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton49.setForeground(new java.awt.Color(0, 0, 0));
        jButton49.setText("Search");
        jButton49.setBorder(null);
        jButton49.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton49ActionPerformed(evt);
            }
        });
        jPanel15.add(jButton49, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 40, 80, 30));
        jPanel15.add(jTextField34, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 40, 190, -1));

        jComboBox5.setBackground(new java.awt.Color(255, 255, 255));
        jComboBox5.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jComboBox5.setForeground(new java.awt.Color(0, 0, 0));
        jComboBox5.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "Completed", "On process", "Canceled" }));
        jPanel15.add(jComboBox5, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 380, 200, 30));

        jLabel63.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel63.setForeground(new java.awt.Color(0, 0, 0));
        jLabel63.setText("Booking Status");
        jPanel15.add(jLabel63, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 380, -1, -1));

        jButton50.setBackground(new java.awt.Color(153, 255, 255));
        jButton50.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jButton50.setForeground(new java.awt.Color(0, 0, 0));
        jButton50.setText("Back");
        jButton50.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton50ActionPerformed(evt);
            }
        });
        jPanel15.add(jButton50, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 460, 110, 30));

        jLabel64.setBackground(new java.awt.Color(255, 255, 255));
        jLabel64.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel64.setForeground(new java.awt.Color(0, 0, 0));
        jLabel64.setText("Booking Id");
        jPanel15.add(jLabel64, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 330, -1, -1));
        jPanel15.add(jTextField35, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 340, 200, -1));

        jLabel60.setIcon(new javax.swing.ImageIcon(getClass().getResource("/doctor_online_booking/Image/bg6.jpg"))); // NOI18N
        jLabel60.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentHidden(java.awt.event.ComponentEvent evt) {
                jLabel60ComponentHidden(evt);
            }
        });
        jPanel15.add(jLabel60, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 750, 620));

        jTabbedPane1.addTab("tab14", jPanel15);

        getContentPane().add(jTabbedPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, -30, 680, 600));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/doctor_online_booking/Image/bg6.jpg"))); // NOI18N
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 2, 869, 570));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        jTabbedPane1.setSelectedIndex(0);

    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        jTabbedPane1.setSelectedIndex(1);
        try {

            PreparedStatement p = con.prepareStatement("Select * from details Where ID=?");
            p.setString(1, id);
            ResultSet rs = p.executeQuery();
            if (rs.next()) {
                jTextField15.setText(rs.getString(1));
                jTextField14.setText(rs.getString(2));
                jPasswordField3.setText(rs.getString(3));
                jTextField13.setText(rs.getString(4));
                jTextField12.setText(rs.getString(5));
                jTextField11.setText(rs.getString(6));

            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        jTabbedPane1.setSelectedIndex(2);
        try {
            //if clicked again refresh the table to avoid the duplicate values
            jTable1.setModel(new DefaultTableModel());
            String columnName = "Type";
            String conditionValue = "Doctor";
            String qry = "Select Id,FullName,Address,Mobile,Email,Specialist from details Where Type='Doctor'";
            PreparedStatement p = con.prepareStatement(qry);
            ResultSet rs = p.executeQuery(qry);
            ResultSetMetaData rsmd = rs.getMetaData();
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();

            int cols = rsmd.getColumnCount();
            String[] colName = new String[cols];
            for (int i = 0; i < cols; i++) {
                colName[i] = rsmd.getColumnName(i + 1);
                model.setColumnIdentifiers(colName);

                String id, name, add, mob, mail, sp;
                while (rs.next()) {
                    id = rs.getString(1);
                    name = rs.getString(2);
                    add = rs.getString(3);
                    mob = rs.getString(4);
                    mail = rs.getString(5);
                    sp = rs.getString(6);

                    String[] row = {id, name, add, mob, mail, sp};
                    model.addRow(row);
                }

            }

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex);
        }

    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        jTabbedPane1.setSelectedIndex(10);
        try {
            //if clicked again refresh the table to avoid the duplicate values
            jTable5.setModel(new DefaultTableModel());
            String columnName = "Type";
            String conditionValue = "Doctor";
            String qry = "Select Id,FullName,Address,Mobile,Email from details Where Type='User'";
            PreparedStatement p = con.prepareStatement(qry);
            ResultSet rs = p.executeQuery(qry);
            ResultSetMetaData rsmd = rs.getMetaData();
            DefaultTableModel model = (DefaultTableModel) jTable5.getModel();

            int cols = rsmd.getColumnCount();
            String[] colName = new String[cols];
            for (int i = 0; i < cols; i++) {
                colName[i] = rsmd.getColumnName(i + 1);
                model.setColumnIdentifiers(colName);

                String id, name, add, mob, mail;
                while (rs.next()) {
                    id = rs.getString(1);
                    name = rs.getString(2);
                    add = rs.getString(3);
                    mob = rs.getString(4);
                    mail = rs.getString(5);

                    String[] row = {id, name, add, mob, mail};
                    model.addRow(row);
                }

            }

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        dispose();
        Login l = new Login();
        l.show();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        jTabbedPane1.setSelectedIndex(12);
        try {
            //if clicked again refresh the table to avoid the duplicate values
            jTable7.setModel(new DefaultTableModel());

            String qry = "Select * from appointment_details";
            PreparedStatement p = con.prepareStatement(qry);
            ResultSet rs = p.executeQuery();
            ResultSetMetaData rsmd = rs.getMetaData();
            DefaultTableModel model = (DefaultTableModel) jTable7.getModel();

            int cols = rsmd.getColumnCount();
            String[] colName = new String[cols];
            for (int i = 0; i < cols; i++) {
                colName[i] = rsmd.getColumnName(i + 1);
                model.setColumnIdentifiers(colName);

                String bid, name, cont, doc, date, st, ID;
                while (rs.next()) {
                    bid = rs.getString(1);
                    name = rs.getString(2);
                    cont = rs.getString(3);
                    doc = rs.getString(4);
                    date = rs.getString(5);
                    st = rs.getString(6);
                    ID = rs.getString(7);
                    String[] row = {bid, name, cont, doc, date, st, ID};
                    model.addRow(row);
                }

            }

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jLabel3ComponentHidden(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jLabel3ComponentHidden
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel3ComponentHidden

    private void jLabel4ComponentHidden(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jLabel4ComponentHidden
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel4ComponentHidden

    private void jLabel5ComponentHidden(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jLabel5ComponentHidden
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel5ComponentHidden

    private void jLabel6ComponentHidden(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jLabel6ComponentHidden
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel6ComponentHidden

    private void jLabel7ComponentHidden(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jLabel7ComponentHidden
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel7ComponentHidden

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        try {

            Email_validation v = new Email_validation();

            if (jTextField15.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Enter a ID");
                jTextField15.requestFocus();
            } else if (jTextField14.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Enter a Name");
                jTextField14.requestFocus();
            } else if (jPasswordField3.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Enter a Password");
                jPasswordField3.requestFocus();
            } else if (jTextField13.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Enter a Address");
                jTextField13.requestFocus();
            } else if (jTextField11.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Enter a email");
                jTextField11.requestFocus();
            } else if (!v.isvalid(jTextField11.getText())) {
                JOptionPane.showMessageDialog(null, "invalid Email");
                jTextField11.setText("");
                jTextField11.requestFocus();
            } else if (jTextField12.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Enter a 10 digit number");
                jTextField12.requestFocus();
            } else {
                //validating mobile number is 10 digit
                String number = jTextField12.getText();
                number = number.replace(" ", ""); //if user use space in the mobile field
                boolean valid = number.matches("[0-9]{9,10}");
                if (valid == false) {
                    JOptionPane.showMessageDialog(null, "Enter a 10 digit number");
                    jTextField12.setText("");
                    jTextField12.requestFocus();
                } else {
                    try {
                        String ID = jTextField15.getText();
                        if (ID.equals(id)) {

                            String Name = jTextField14.getText();
                            String pass = jPasswordField3.getText();
                            String Address = jTextField13.getText();
                            int mobile = Integer.parseInt(jTextField12.getText());
                            String email = jTextField11.getText();

                            String sql = "UPDATE details SET FullName=?,Password=?,Address=?,Mobile=?,Email=?,Specialist=?,Type=? WHERE ID=?;";
                            PreparedStatement p = con.prepareStatement(sql);

                            p.setString(1, Name);
                            p.setString(2, pass);
                            p.setString(3, Address);
                            p.setInt(4, mobile);
                            p.setString(5, email);
                            p.setString(6, "");
                            p.setString(7, "Admin");
                            p.setString(8, ID);
                            p.executeUpdate();
                            JOptionPane.showMessageDialog(null, "Update Complete");
                        } else {
                            JOptionPane.showMessageDialog(null, "User ID Cannot be Change");
                            jTextField15.setText("");
                            jTextField15.requestFocus();

                        }
                    } catch (Exception ex) {
                        JOptionPane.showMessageDialog(null, ex);
                    }
                }
            }

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
        jTable1.setModel(new DefaultTableModel());
        String Name = "";
        try {
            //if clicked again refresh the table to avoid the duplicate values
            String search = jTextField1.getText();
            if (search.equals("")) {
                JOptionPane.showMessageDialog(null, "Enter a valid input Doctor Id,Name or which Specialist you want to Know ");
                jTextField1.setText("");
                jTextField1.requestFocus();

                jTable1.setModel(new DefaultTableModel());

                String qry = "Select Id,FullName,Specialist from details Where Type='Doctor'";
                PreparedStatement p1 = con.prepareStatement(qry);
                ResultSet rs1 = p1.executeQuery(qry);
                ResultSetMetaData rsmd1 = rs1.getMetaData();
                DefaultTableModel model1 = (DefaultTableModel) jTable1.getModel();

                int cols1 = rsmd1.getColumnCount();
                String[] colName1 = new String[cols1];
                for (int i = 0; i < cols1; i++) {
                    colName1[i] = rsmd1.getColumnName(i + 1);
                    model1.setColumnIdentifiers(colName1);

                    String id, name, sp;
                    while (rs1.next()) {
                        id = rs1.getString(1);
                        name = rs1.getString(2);
                        sp = rs1.getString(3);

                        String[] row1 = {id, name, sp};
                        model1.addRow(row1);
                    }

                }
            } else {

                PreparedStatement p = con.prepareStatement("Select Id,FullName,Specialist from details Where Type='Doctor' AND id=? OR FullName=? OR Specialist=?");
                p.setString(1, search);
                p.setString(2, search);
                p.setString(3, search);
                ResultSet rs = p.executeQuery();
                ResultSetMetaData rsmd = rs.getMetaData();
                DefaultTableModel model = (DefaultTableModel) jTable1.getModel();

                int cols = rsmd.getColumnCount();
                String[] colName = new String[cols];
                for (int i = 0; i < cols; i++) {
                    colName[i] = rsmd.getColumnName(i + 1);
                    model.setColumnIdentifiers(colName);

                    String id, name, sp;
                    while (rs.next()) {
                        id = rs.getString(1);
                        name = rs.getString(2);
                        sp = rs.getString(3);
                        Name = name;
                        String[] row = {id, name, sp};
                        model.addRow(row);
                    }

                }
                if (Name.equals("")) {
                    JOptionPane.showMessageDialog(null, "NO Result found");
                    try {
                        //if clicked again refresh the table to avoid the duplicate values
                        jTable1.setModel(new DefaultTableModel());

                        String qry = "Select Id,FullName,Specialist from details Where Type='Doctor'";
                        PreparedStatement p1 = con.prepareStatement(qry);
                        ResultSet rs1 = p1.executeQuery(qry);
                        ResultSetMetaData rsmd1 = rs1.getMetaData();
                        DefaultTableModel model1 = (DefaultTableModel) jTable1.getModel();

                        int cols1 = rsmd1.getColumnCount();
                        String[] colName1 = new String[cols1];
                        for (int i = 0; i < cols1; i++) {
                            colName1[i] = rsmd1.getColumnName(i + 1);
                            model1.setColumnIdentifiers(colName1);

                            String id, name, sp;
                            while (rs1.next()) {
                                id = rs1.getString(1);
                                name = rs1.getString(2);
                                sp = rs1.getString(3);

                                String[] row1 = {id, name, sp};
                                model1.addRow(row1);
                            }

                        }

                    } catch (Exception ex) {
                        JOptionPane.showMessageDialog(null, ex);
                    }
                }
            }

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        // TODO add your handling code here:
        jTabbedPane1.setSelectedIndex(3);
        jPanel17.setVisible(true);
        jPanel18.setVisible(false);
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        // TODO add your handling code here:
        jTabbedPane1.setSelectedIndex(4);
        jPanel19.setVisible(true);
        jPanel20.setVisible(false);
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
        jTabbedPane1.setSelectedIndex(5);
        try {
            //if clicked again refresh the table to avoid the duplicate values
            jTable2.setModel(new DefaultTableModel());
            String columnName = "Type";
            String conditionValue = "Doctor";
            String qry = "Select Id,FullName,Address,Mobile,Email,Specialist from details Where Type='Doctor'";
            PreparedStatement p = con.prepareStatement(qry);
            ResultSet rs = p.executeQuery(qry);
            ResultSetMetaData rsmd = rs.getMetaData();
            DefaultTableModel model = (DefaultTableModel) jTable2.getModel();

            int cols = rsmd.getColumnCount();
            String[] colName = new String[cols];
            for (int i = 0; i < cols; i++) {
                colName[i] = rsmd.getColumnName(i + 1);
                model.setColumnIdentifiers(colName);

                String id, name, add, mob, mail, sp;
                while (rs.next()) {
                    id = rs.getString(1);
                    name = rs.getString(2);
                    add = rs.getString(3);
                    mob = rs.getString(4);
                    mail = rs.getString(5);
                    sp = rs.getString(6);

                    String[] row = {id, name, add, mob, mail, sp};
                    model.addRow(row);
                }

            }

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jLabel12ComponentHidden(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jLabel12ComponentHidden
        // TODO add your handling code here:

    }//GEN-LAST:event_jLabel12ComponentHidden

    private void jLabel13ComponentHidden(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jLabel13ComponentHidden
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel13ComponentHidden

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        // TODO add your handling code here:
        jTabbedPane1.setSelectedIndex(6);

        try {
            //if clicked again refresh the table to avoid the duplicate values
            jTable3.setModel(new DefaultTableModel());
            String columnName = "Type";
            String conditionValue = "Doctor";
            String qry = "Select * from doctor_available";
            PreparedStatement p = con.prepareStatement(qry);
            ResultSet rs = p.executeQuery(qry);
            ResultSetMetaData rsmd = rs.getMetaData();
            DefaultTableModel model = (DefaultTableModel) jTable3.getModel();

            int cols = rsmd.getColumnCount();
            String[] colName = new String[cols];
            for (int i = 0; i < cols; i++) {
                colName[i] = rsmd.getColumnName(i + 1);
                model.setColumnIdentifiers(colName);

                String id, name, st, date, sp;
                while (rs.next()) {
                    id = rs.getString(1);
                    name = rs.getString(2);
                    st = rs.getString(3);
                    date = rs.getString(4);
                    sp = rs.getString(5);

                    String[] row = {id, name, st, date, sp};
                    model.addRow(row);
                }

            }

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        if (jCheckBox1.isSelected()) {
            jPasswordField1.setEchoChar((char) 0);
        } else {
            jPasswordField1.setEchoChar('*');
        }
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        // TODO add your handling code here:
        jTextField2.setText("");
        jTextField3.setText("");
        jPasswordField1.setText("");
        jTextField4.setText("");
        jTextField5.setText("");
        jTextField7.setText("");
        jTextField6.setText("");
        jComboBox1.setSelectedIndex(0);
        jTextField2.requestFocus();
    }//GEN-LAST:event_jButton13ActionPerformed

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        // TODO add your handling code here:
        try {
            Email_validation v = new Email_validation();

            String spe = "";
            String cmb = (String) jComboBox1.getSelectedItem();
            spe = jTextField6.getText();

            if (jTextField2.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Enter a ID");
                jTextField2.requestFocus();
            } else if (jTextField3.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Enter a Name");
                jTextField3.requestFocus();
            } else if (jPasswordField1.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Enter a Password");
                jPasswordField1.requestFocus();
            } else if (jTextField4.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Enter a Address");
                jTextField4.requestFocus();
            } else if (jTextField7.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Enter a email");
                jTextField7.requestFocus();
            } else if (!v.isvalid(jTextField7.getText())) {
                JOptionPane.showMessageDialog(null, "invalid Email");
                jTextField7.setText("");
                jTextField7.requestFocus();
            } else if (cmb.equals("Select")) {
                JOptionPane.showMessageDialog(null, "Select a Type");
                jComboBox1.requestFocus();
            } else if (jTextField5.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Enter a 10 digit number");
                jTextField5.requestFocus();
            } else {
                //validating mobile number is 10 digit
                String number = jTextField5.getText();
                number = number.replace(" ", ""); //if user use space in the mobile field
                boolean valid = number.matches("[0-9]{9,10}");
                if (valid == false) {
                    JOptionPane.showMessageDialog(null, "Enter a 10 digit number");
                    jTextField5.setText("");
                    jTextField5.requestFocus();
                }
                if (cmb.equals("Doctor")) {
                    jTextField6.setEditable(true);
                    if (spe.equals("")) {
                        JOptionPane.showMessageDialog(null, "Enter Your Special Skill");
                        jTextField6.requestFocus();
                    } else {
                        try {
                            String uid = jTextField2.getText();
                            PreparedStatement p2 = con.prepareStatement("Select * from details where id=?");
                            p2.setString(1, uid);
                            ResultSet rs = p2.executeQuery();
                            if (rs.next()) {
                                JOptionPane.showMessageDialog(null, "User ID Already Taken");
                                jTextField2.setText("");
                                jTextField2.requestFocus();
                            } else {
                                String Name = jTextField3.getText();
                                String pass = jPasswordField1.getText();
                                String Address = jTextField4.getText();
                                int mobile = Integer.parseInt(jTextField5.getText());
                                String email = jTextField7.getText();

                                PreparedStatement p = con.prepareStatement("insert into details values(?,?,?,?,?,?,?,?)");
                                p.setString(1, uid);
                                p.setString(2, Name);
                                p.setString(3, pass);
                                p.setString(4, Address);
                                p.setInt(5, mobile);
                                p.setString(6, email);
                                p.setString(7, spe);
                                p.setString(8, cmb);
                                p.executeUpdate();
                                JOptionPane.showMessageDialog(null, "Registration Complete");

                                jTextField2.setText("");
                                jTextField3.setText("");
                                jPasswordField1.setText("");
                                jTextField4.setText("");
                                jTextField5.setText("");
                                jTextField7.setText("");
                                jTextField6.setText("");
                                jComboBox1.setSelectedIndex(0);
                                jTextField2.requestFocus();
                            }
                        } catch (Exception ex) {
                            JOptionPane.showMessageDialog(null, ex);
                        }
                    }
                } else if (cmb.equals("User") || cmb.equals("Admin")) {
                    if (spe.equals("")) {
                        try {
                            String uid = jTextField2.getText();
                            PreparedStatement p2 = con.prepareStatement("Select * from details where id=?");
                            p2.setString(1, uid);
                            ResultSet rs = p2.executeQuery();
                            if (rs.next()) {
                                JOptionPane.showMessageDialog(null, "User ID Already Taken");
                                jTextField2.setText("");
                                jTextField2.requestFocus();
                            } else {
                                String Name = jTextField3.getText();
                                String pass = jPasswordField1.getText();
                                String Address = jTextField4.getText();
                                int mobile = Integer.parseInt(jTextField5.getText());
                                String email = jTextField7.getText();

                                PreparedStatement p = con.prepareStatement("insert into details values(?,?,?,?,?,?,?,?)");
                                p.setString(1, uid);
                                p.setString(2, Name);
                                p.setString(3, pass);
                                p.setString(4, Address);
                                p.setInt(5, mobile);
                                p.setString(6, email);
                                p.setString(7, spe);
                                p.setString(8, cmb);
                                p.executeUpdate();
                                JOptionPane.showMessageDialog(null, "Registration Complete");

                                jTextField2.setText("");
                                jTextField3.setText("");
                                jPasswordField1.setText("");
                                jTextField4.setText("");
                                jTextField5.setText("");
                                jTextField7.setText("");
                                jTextField6.setText("");
                                jComboBox1.setSelectedIndex(0);
                                jTextField2.requestFocus();
                            }
                        } catch (Exception ex) {
                            JOptionPane.showMessageDialog(null, ex);
                        }
                    } else {
                        JOptionPane.showMessageDialog(null, "You Cannot fill Specialist");
                        jTextField6.setText("");
                        jTextField6.setEditable(false);
                    }
                }

            }

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
    }//GEN-LAST:event_jButton14ActionPerformed

    private void jButton15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton15ActionPerformed
        Login l = new Login();
        l.show();
        dispose();
    }//GEN-LAST:event_jButton15ActionPerformed

    private void jButton17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton17ActionPerformed
        // TODO add your handling code here:
        jTextField18.setText("");
        jTextField17.setText("");

        jTextField16.setText("");
        jTextField10.setText("");
        jTextField9.setText("");
        jTextField8.setText("");
        jComboBox2.setSelectedIndex(0);
        jTextField18.requestFocus();
    }//GEN-LAST:event_jButton17ActionPerformed

    private void jButton18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton18ActionPerformed
        // TODO add your handling code here:
        Email_validation v = new Email_validation();
        String spe = "";
        String cmb = (String) jComboBox2.getSelectedItem();
        spe = jTextField8.getText();

        if (jTextField18.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Enter a ID");
            jTextField18.requestFocus();
        } else if (jTextField17.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Enter a Name");
            jTextField17.requestFocus();
        } else if (jTextField16.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Enter a Address");
            jTextField16.requestFocus();
        } else if (jTextField9.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Enter a email");
            jTextField9.requestFocus();
        } else if (!v.isvalid(jTextField9.getText())) {
            JOptionPane.showMessageDialog(null, "invalid Email");
            jTextField9.setText("");
            jTextField9.requestFocus();
        } else if (cmb.equals("Select")) {
            JOptionPane.showMessageDialog(null, "Select a Type");
            jComboBox2.requestFocus();
        } else if (jTextField10.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Enter a 10 digit number");
            jTextField10.requestFocus();
        } else {
            //validating mobile number is 10 digit
            String number = jTextField10.getText();
            number = number.replace(" ", ""); //if user use space in the mobile field
            boolean valid = number.matches("[0-9]{9,10}");
            if (valid == false) {
                JOptionPane.showMessageDialog(null, "Enter a 10 digit number");
                jTextField10.setText("");
                jTextField10.requestFocus();
            }
            if (cmb.equals("Doctor")) {
                jTextField8.setEditable(true);
                if (spe.equals("")) {
                    JOptionPane.showMessageDialog(null, "Enter Your Special Skill");
                    jTextField8.requestFocus();
                } else {
                    try {
                        String uid = jTextField18.getText();
                        PreparedStatement p2 = con.prepareStatement("Select * from details where id=?");
                        p2.setString(1, uid);
                        ResultSet rs = p2.executeQuery();
                        if (rs.next()) {
                            String Name = jTextField17.getText();

                            String Address = jTextField16.getText();
                            int mobile = Integer.parseInt(jTextField10.getText());
                            String email = jTextField9.getText();

                            PreparedStatement p = con.prepareStatement("Update details set FullName=?,Address=?,Mobile=?,Email=?,Specialist=?,Type=? Where ID=?");

                            p.setString(1, Name);
                            p.setString(2, Address);
                            p.setInt(3, mobile);
                            p.setString(4, email);
                            p.setString(5, spe);
                            p.setString(6, cmb);
                            p.setString(7, uid);
                            p.executeUpdate();
                            JOptionPane.showMessageDialog(null, "Update Complete");

                            jTextField18.setText("");
                            jTextField17.setText("");

                            jTextField16.setText("");
                            jTextField10.setText("");
                            jTextField9.setText("");
                            jTextField8.setText("");
                            jComboBox2.setSelectedIndex(0);
                            jTextField18.requestFocus();

                        } else {

                            JOptionPane.showMessageDialog(null, "User Not Found");
                            jTextField18.setText("");
                            jTextField18.requestFocus();
                        }
                    } catch (Exception ex) {
                        JOptionPane.showMessageDialog(null, ex);
                    }
                }
            } else if (cmb.equals("User") || cmb.equals("Admin")) {
                if (spe.equals("")) {
                    try {
                        String uid = jTextField18.getText();
                        PreparedStatement p2 = con.prepareStatement("Select * from details where id=?");
                        p2.setString(1, uid);
                        ResultSet rs = p2.executeQuery();
                        if (rs.next()) {
                            String Name = jTextField17.getText();

                            String Address = jTextField16.getText();
                            int mobile = Integer.parseInt(jTextField10.getText());
                            String email = jTextField9.getText();

                            PreparedStatement p = con.prepareStatement("Update details set FullName=?,Address=?,Mobile=?,Email=?,Specialist=?,Type=? Where ID=?");

                            p.setString(1, Name);
                            p.setString(2, Address);
                            p.setInt(3, mobile);
                            p.setString(4, email);
                            p.setString(5, spe);
                            p.setString(6, cmb);
                            p.setString(7, uid);
                            p.executeUpdate();
                            JOptionPane.showMessageDialog(null, "Update Complete");

                            jTextField18.setText("");
                            jTextField17.setText("");

                            jTextField16.setText("");
                            jTextField10.setText("");
                            jTextField9.setText("");
                            jTextField8.setText("");
                            jComboBox2.setSelectedIndex(0);
                            jTextField18.requestFocus();
                        } else {
                            JOptionPane.showMessageDialog(null, "User Not Found");
                            jTextField18.setText("");
                            jTextField18.requestFocus();

                        }
                    } catch (Exception ex) {
                        JOptionPane.showMessageDialog(null, ex);
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "You Cannot fill Specialist");
                    jTextField8.setText("");
                    jTextField8.setEditable(false);
                }

            }

        }
    }//GEN-LAST:event_jButton18ActionPerformed

    private void jButton19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton19ActionPerformed
        // TODO add your handling code here:
        jTabbedPane1.setSelectedIndex(2);
    }//GEN-LAST:event_jButton19ActionPerformed

    private void jButton20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton20ActionPerformed
        // TODO add your handling code here:
        jTable2.setModel(new DefaultTableModel());
        String Name = "";
        try {
            //if clicked again refresh the table to avoid the duplicate values
            String search = jTextField19.getText();
            if (search.equals("")) {
                JOptionPane.showMessageDialog(null, "Enter a valid input Doctor Id,Name or which Specialist you want to Know ");
                jTextField19.setText("");
                jTextField19.requestFocus();

                jTable2.setModel(new DefaultTableModel());

                String qry = "Select Id,FullName,Specialist from details Where Type='Doctor'";
                PreparedStatement p1 = con.prepareStatement(qry);
                ResultSet rs1 = p1.executeQuery(qry);
                ResultSetMetaData rsmd1 = rs1.getMetaData();
                DefaultTableModel model1 = (DefaultTableModel) jTable2.getModel();

                int cols1 = rsmd1.getColumnCount();
                String[] colName1 = new String[cols1];
                for (int i = 0; i < cols1; i++) {
                    colName1[i] = rsmd1.getColumnName(i + 1);
                    model1.setColumnIdentifiers(colName1);

                    String id, name, sp;
                    while (rs1.next()) {
                        id = rs1.getString(1);
                        name = rs1.getString(2);
                        sp = rs1.getString(3);

                        String[] row1 = {id, name, sp};
                        model1.addRow(row1);
                    }

                }
            } else {

                PreparedStatement p = con.prepareStatement("Select Id,FullName,Specialist from details Where Type='Doctor' AND id=? OR FullName=? OR Specialist=?");
                p.setString(1, search);
                p.setString(2, search);
                p.setString(3, search);
                ResultSet rs = p.executeQuery();
                ResultSetMetaData rsmd = rs.getMetaData();
                DefaultTableModel model = (DefaultTableModel) jTable2.getModel();

                int cols = rsmd.getColumnCount();
                String[] colName = new String[cols];
                for (int i = 0; i < cols; i++) {
                    colName[i] = rsmd.getColumnName(i + 1);
                    model.setColumnIdentifiers(colName);

                    String id, name, sp;
                    while (rs.next()) {
                        id = rs.getString(1);
                        name = rs.getString(2);
                        sp = rs.getString(3);
                        Name = name;
                        String[] row = {id, name, sp};
                        model.addRow(row);
                    }

                }
                if (Name.equals("")) {
                    JOptionPane.showMessageDialog(null, "NO Result found");
                    try {
                        //if clicked again refresh the table to avoid the duplicate values
                        jTable2.setModel(new DefaultTableModel());

                        String qry = "Select Id,FullName,Specialist from details Where Type='Doctor'";
                        PreparedStatement p1 = con.prepareStatement(qry);
                        ResultSet rs1 = p1.executeQuery(qry);
                        ResultSetMetaData rsmd1 = rs1.getMetaData();
                        DefaultTableModel model1 = (DefaultTableModel) jTable2.getModel();

                        int cols1 = rsmd1.getColumnCount();
                        String[] colName1 = new String[cols1];
                        for (int i = 0; i < cols1; i++) {
                            colName1[i] = rsmd1.getColumnName(i + 1);
                            model1.setColumnIdentifiers(colName1);

                            String id, name, sp;
                            while (rs1.next()) {
                                id = rs1.getString(1);
                                name = rs1.getString(2);
                                sp = rs1.getString(3);

                                String[] row1 = {id, name, sp};
                                model1.addRow(row1);
                            }

                        }

                    } catch (Exception ex) {
                        JOptionPane.showMessageDialog(null, ex);
                    }
                }
            }

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
    }//GEN-LAST:event_jButton20ActionPerformed

    private void jButton21ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton21ActionPerformed
        // TODO add your handling code here:
        try {
            String Book = jTextField20.getText();
            if (jTextField20.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Doctor ID Cannot be Empty");
                jTextField20.setText("");
                jTextField20.requestFocus();
            } else {
                PreparedStatement p2 = con.prepareStatement("Select * from details Where ID=?");
                p2.setString(1, Book);
                ResultSet rs6 = p2.executeQuery();
                if (rs6.next()) {
                    String bid1 = jTextField20.getText();
                    PreparedStatement p1 = con.prepareStatement("Delete From details Where ID=?");
                    p1.setString(1, bid1);
                    p1.executeUpdate();
                    JOptionPane.showMessageDialog(null, "Delete Complete");
                    jTextField20.setText("");

                    try {
                        //if clicked again refresh the table to avoid the duplicate values
                        jTable2.setModel(new DefaultTableModel());
                        String columnName = "Type";
                        String conditionValue = "Doctor";
                        String qry = "Select Id,FullName,Specialist from details Where Type='Doctor'";
                        PreparedStatement p = con.prepareStatement(qry);
                        ResultSet rs = p.executeQuery(qry);
                        ResultSetMetaData rsmd = rs.getMetaData();
                        DefaultTableModel model = (DefaultTableModel) jTable2.getModel();

                        int cols = rsmd.getColumnCount();
                        String[] colName = new String[cols];
                        for (int i = 0; i < cols; i++) {
                            colName[i] = rsmd.getColumnName(i + 1);
                            model.setColumnIdentifiers(colName);

                            String id, name, sp;
                            while (rs.next()) {
                                id = rs.getString(1);
                                name = rs.getString(2);
                                sp = rs.getString(3);

                                String[] row = {id, name, sp};
                                model.addRow(row);
                            }

                        }

                    } catch (Exception ex) {
                        JOptionPane.showMessageDialog(null, ex);
                    }

                } else {
                    JOptionPane.showMessageDialog(null, "Doctor Id not Found");
                    jTextField20.setText("");
                    jTextField20.requestFocus();
                }
            }

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex);
        }

    }//GEN-LAST:event_jButton21ActionPerformed

    private void jButton22ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton22ActionPerformed
        // TODO add your handling code here:
        jTabbedPane1.setSelectedIndex(2);
    }//GEN-LAST:event_jButton22ActionPerformed

    private void jButton23ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton23ActionPerformed
        // TODO add your handling code here:
        try {

            String search = jTextField21.getText();
            String Name = "";
            if (search.equals("")) {
                JOptionPane.showMessageDialog(null, "Enter a valid input Doctor Id,Name or which Specialist you want to Know ");
                jTextField21.setText("");
                jTextField21.requestFocus();
            } else {
                //if clicked again refresh the table to avoid the duplicate values
                jTable3.setModel(new DefaultTableModel());
                String columnName = "Type";
                String conditionValue = "Doctor";

                String qry = "Select * from doctor_available Where ID=? OR Doctor_name=? OR Specialist=?";
                PreparedStatement p = con.prepareStatement(qry);
                p.setString(1, search);
                p.setString(2, search);
                p.setString(3, search);

                ResultSet rs = p.executeQuery();
                ResultSetMetaData rsmd = rs.getMetaData();
                DefaultTableModel model = (DefaultTableModel) jTable3.getModel();

                int cols = rsmd.getColumnCount();
                String[] colName = new String[cols];
                for (int i = 0; i < cols; i++) {
                    colName[i] = rsmd.getColumnName(i + 1);
                    model.setColumnIdentifiers(colName);

                    String id, name, st, date, sp;
                    while (rs.next()) {
                        id = rs.getString(1);
                        name = rs.getString(2);
                        st = rs.getString(3);
                        date = rs.getString(4);
                        sp = rs.getString(5);
                        Name = name;

                        String[] row = {id, name, st, date, sp};
                        model.addRow(row);
                    }
                }
                jTextField21.setText("");
                jTextField21.requestFocus();

                if (Name.equals("")) {
                    JOptionPane.showMessageDialog(null, "NO Result found");
                    try {

                        jTable3.setModel(new DefaultTableModel());

                        String qry1 = "Select * from doctor_available";
                        PreparedStatement p1 = con.prepareStatement(qry1);
                        ResultSet rs1 = p1.executeQuery();
                        ResultSetMetaData rsmd1 = rs1.getMetaData();
                        DefaultTableModel model1 = (DefaultTableModel) jTable3.getModel();

                        int cols1 = rsmd1.getColumnCount();
                        String[] colName1 = new String[cols1];
                        for (int i = 0; i < cols1; i++) {
                            colName1[i] = rsmd1.getColumnName(i + 1);
                            model1.setColumnIdentifiers(colName1);

                            String id, name, st, date, sp;
                            while (rs1.next()) {
                                id = rs1.getString(1);
                                name = rs1.getString(2);
                                st = rs1.getString(3);
                                date = rs1.getString(4);
                                sp = rs1.getString(5);
                                Name = name;

                                String[] row1 = {id, name, st, date, sp};
                                model1.addRow(row1);
                            }
                        }
                        jTextField21.setText("");
                        jTextField21.requestFocus();

                    } catch (Exception ex) {
                        JOptionPane.showMessageDialog(null, ex);
                    }
                }
            }

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
    }//GEN-LAST:event_jButton23ActionPerformed

    private void jButton24ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton24ActionPerformed
        // TODO add your handling code here:
        jTabbedPane1.setSelectedIndex(2);
    }//GEN-LAST:event_jButton24ActionPerformed

    private void jButton25ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton25ActionPerformed
        // TODO add your handling code here:
        jTabbedPane1.setSelectedIndex(7);
    }//GEN-LAST:event_jButton25ActionPerformed

    private void jButton26ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton26ActionPerformed
        // TODO add your handling code here:
        jTabbedPane1.setSelectedIndex(8);
    }//GEN-LAST:event_jButton26ActionPerformed

    private void jButton27ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton27ActionPerformed
        // TODO add your handling code here:
        jTabbedPane1.setSelectedIndex(9);
        try {
            //if clicked again refresh the table to avoid the duplicate values
            jTable4.setModel(new DefaultTableModel());
            String columnName = "Type";
            String conditionValue = "Doctor";
            String qry = "Select * from doctor_available";
            PreparedStatement p = con.prepareStatement(qry);
            ResultSet rs = p.executeQuery(qry);
            ResultSetMetaData rsmd = rs.getMetaData();
            DefaultTableModel model = (DefaultTableModel) jTable4.getModel();

            int cols = rsmd.getColumnCount();
            String[] colName = new String[cols];
            for (int i = 0; i < cols; i++) {
                colName[i] = rsmd.getColumnName(i + 1);
                model.setColumnIdentifiers(colName);

                String id, name, st, date, sp;
                while (rs.next()) {
                    id = rs.getString(1);
                    name = rs.getString(2);
                    st = rs.getString(3);
                    date = rs.getString(4);
                    sp = rs.getString(5);

                    String[] row = {id, name, st, date, sp};
                    model.addRow(row);
                }

            }

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
    }//GEN-LAST:event_jButton27ActionPerformed

    private void jLabel39ComponentHidden(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jLabel39ComponentHidden
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel39ComponentHidden

    private void jLabel40ComponentHidden(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jLabel40ComponentHidden
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel40ComponentHidden

    private void jLabel41ComponentHidden(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jLabel41ComponentHidden
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel41ComponentHidden

    private void jLabel42ComponentHidden(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jLabel42ComponentHidden
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel42ComponentHidden

    private void jButton28ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton28ActionPerformed
        // TODO add your handling code here:
        jTabbedPane1.setSelectedIndex(6);
    }//GEN-LAST:event_jButton28ActionPerformed

    private void jButton29ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton29ActionPerformed
        // TODO add your handling code here
        try {
            String cmb = (String) jComboBox3.getSelectedItem();
            String spe = jTextField24.getText();

            if (jTextField22.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Enter a ID");
                jTextField22.requestFocus();
            } else if (jTextField23.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Enter a Name");
                jTextField23.requestFocus();
            } else if (jTextField24.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Enter the Specialist");
                jTextField24.requestFocus();
            } else if (cmb.equals("Select")) {
                JOptionPane.showMessageDialog(null, "Select a Availability");
                jComboBox3.requestFocus();
            } else {
                try {
                    String uid = jTextField22.getText();
                    PreparedStatement p2 = con.prepareStatement("Select * from doctor_available where id=?");
                    p2.setString(1, uid);
                    ResultSet rs = p2.executeQuery();
                    if (rs.next()) {
                        JOptionPane.showMessageDialog(null, "ID Already Taken");
                        jTextField22.setText("");
                        jTextField22.requestFocus();
                    } else {
                        String Name = jTextField23.getText();
                        String qry1 = "Select * from details Where Type='Doctor' AND FullName=?";
                        PreparedStatement p1 = con.prepareStatement(qry1);
                        p1.setString(1, Name);
                        ResultSet rs1 = p1.executeQuery();
                        if (rs1.next()) {
                            String sp = jTextField24.getText();
                            String av = jComboBox3.getSelectedItem().toString();

                            String date = ((JTextField) jDateChooser2.getDateEditor().getUiComponent()).getText();
                            PreparedStatement p = con.prepareStatement("insert into doctor_available values(?,?,?,?,?)");
                            p.setString(1, uid);
                            p.setString(2, Name);
                            p.setString(3, av);
                            p.setString(4, date);
                            p.setString(5, sp);
                            p.executeUpdate();
                            JOptionPane.showMessageDialog(null, "Adding Complete");

                            jTextField22.setText("");
                            jTextField23.setText("");
                            jTextField24.setText("");
                            jComboBox3.setSelectedIndex(0);
                            jTextField22.requestFocus();
                        } else {
                            JOptionPane.showMessageDialog(null, "Doctor Name Not Found");
                            jTextField23.setText("");
                            jTextField23.requestFocus();
                        }
                    }
                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(null, ex);
                }
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
    }//GEN-LAST:event_jButton29ActionPerformed

    private void jButton30ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton30ActionPerformed
        // TODO add your handling code here:
        jTextField22.setText("");
        jTextField23.setText("");
        jTextField24.setText("");
        jComboBox3.setSelectedIndex(0);
        jTextField22.requestFocus();

    }//GEN-LAST:event_jButton30ActionPerformed

    private void jButton31ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton31ActionPerformed
        // TODO add your handling code here:
        jTextField25.setText("");
        jTextField26.setText("");
        jTextField27.setText("");
        jComboBox4.setSelectedIndex(0);
        jTextField25.requestFocus();
    }//GEN-LAST:event_jButton31ActionPerformed

    private void jButton32ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton32ActionPerformed
        // TODO add your handling code here:
        try {
            String cmb = (String) jComboBox4.getSelectedItem();
            String spe = jTextField27.getText();

            if (jTextField25.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Enter a ID");
                jTextField25.requestFocus();
            } else if (jTextField26.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Enter a Name");
                jTextField26.requestFocus();
            } else if (jTextField27.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Enter the Specialist");
                jTextField27.requestFocus();
            } else if (cmb.equals("Select")) {
                JOptionPane.showMessageDialog(null, "Select a Availability");
                jComboBox4.requestFocus();
            } else {
                try {
                    String uid = jTextField25.getText();
                    PreparedStatement p2 = con.prepareStatement("Select * from doctor_available where id=?");
                    p2.setString(1, uid);
                    ResultSet rs = p2.executeQuery();
                    if (rs.next()) {
                        String Name = jTextField26.getText();
                        String qry1 = "Select * from details Where Type='Doctor' AND FullName=?";
                        PreparedStatement p1 = con.prepareStatement(qry1);
                        p1.setString(1, Name);
                        ResultSet rs1 = p1.executeQuery();
                        if (rs1.next()) {
                            String sp = jTextField27.getText();
                            String av = jComboBox4.getSelectedItem().toString();

                            String date = ((JTextField) jDateChooser3.getDateEditor().getUiComponent()).getText();
                            PreparedStatement p = con.prepareStatement("Update doctor_available SET Doctor_Name=?, Available_Status=?, Available_Date=?,Specialist=? where ID=?");

                            p.setString(1, Name);
                            p.setString(2, av);
                            p.setString(3, date);
                            p.setString(4, sp);
                            p.setString(5, uid);
                            p.executeUpdate();
                            JOptionPane.showMessageDialog(null, "Update Complete");

                            jTextField25.setText("");
                            jTextField26.setText("");
                            jTextField27.setText("");
                            jComboBox4.setSelectedIndex(0);
                            jTextField27.requestFocus();
                        } else {
                            JOptionPane.showMessageDialog(null, "Doctor Name Not Found");
                            jTextField26.setText("");
                            jTextField26.requestFocus();
                        }

                    } else {

                        JOptionPane.showMessageDialog(null, "ID Not Found");
                        jTextField25.setText("");
                        jTextField25.requestFocus();
                    }
                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(null, ex);
                }
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
    }//GEN-LAST:event_jButton32ActionPerformed

    private void jButton33ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton33ActionPerformed
        // TODO add your handling code here:
        jTabbedPane1.setSelectedIndex(6);
    }//GEN-LAST:event_jButton33ActionPerformed

    private void jButton34ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton34ActionPerformed
        // TODO add your handling code here:
        try {

            String search = jTextField28.getText();
            String Name = "";
            if (search.equals("")) {
                JOptionPane.showMessageDialog(null, "Enter a valid input Doctor Id,Name or which Specialist you want to Know ");
                jTextField28.setText("");
                jTextField28.requestFocus();
            } else {
                //if clicked again refresh the table to avoid the duplicate values
                jTable4.setModel(new DefaultTableModel());
                String columnName = "Type";
                String conditionValue = "Doctor";

                String qry = "Select * from doctor_available Where ID=? OR Doctor_name=? OR Specialist=?";
                PreparedStatement p = con.prepareStatement(qry);
                p.setString(1, search);
                p.setString(2, search);
                p.setString(3, search);

                ResultSet rs = p.executeQuery();
                ResultSetMetaData rsmd = rs.getMetaData();
                DefaultTableModel model = (DefaultTableModel) jTable4.getModel();

                int cols = rsmd.getColumnCount();
                String[] colName = new String[cols];
                for (int i = 0; i < cols; i++) {
                    colName[i] = rsmd.getColumnName(i + 1);
                    model.setColumnIdentifiers(colName);

                    String id, name, st, date, sp;
                    while (rs.next()) {
                        id = rs.getString(1);
                        name = rs.getString(2);
                        st = rs.getString(3);
                        date = rs.getString(4);
                        sp = rs.getString(5);
                        Name = name;

                        String[] row = {id, name, st, date, sp};
                        model.addRow(row);
                    }
                }
                jTextField28.setText("");
                jTextField28.requestFocus();

                if (Name.equals("")) {
                    JOptionPane.showMessageDialog(null, "NO Result found");
                    try {

                        jTable4.setModel(new DefaultTableModel());

                        String qry1 = "Select * from doctor_available";
                        PreparedStatement p1 = con.prepareStatement(qry1);
                        ResultSet rs1 = p1.executeQuery();
                        ResultSetMetaData rsmd1 = rs1.getMetaData();
                        DefaultTableModel model1 = (DefaultTableModel) jTable4.getModel();

                        int cols1 = rsmd1.getColumnCount();
                        String[] colName1 = new String[cols1];
                        for (int i = 0; i < cols1; i++) {
                            colName1[i] = rsmd1.getColumnName(i + 1);
                            model1.setColumnIdentifiers(colName1);

                            String id, name, st, date, sp;
                            while (rs1.next()) {
                                id = rs1.getString(1);
                                name = rs1.getString(2);
                                st = rs1.getString(3);
                                date = rs1.getString(4);
                                sp = rs1.getString(5);
                                Name = name;

                                String[] row1 = {id, name, st, date, sp};
                                model1.addRow(row1);
                            }
                        }
                        jTextField28.setText("");
                        jTextField28.requestFocus();

                    } catch (Exception ex) {
                        JOptionPane.showMessageDialog(null, ex);
                    }
                }
            }

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
    }//GEN-LAST:event_jButton34ActionPerformed

    private void jButton35ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton35ActionPerformed
        // TODO add your handling code here:
        jTabbedPane1.setSelectedIndex(6);
    }//GEN-LAST:event_jButton35ActionPerformed

    private void jTextField28ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField28ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField28ActionPerformed

    private void jButton36ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton36ActionPerformed
        // TODO add your handling code here:
        try {
            String Book = jTextField29.getText();
            if (jTextField29.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "ID Cannot be Empty");
                jTextField29.setText("");
                jTextField29.requestFocus();
            } else {
                PreparedStatement p2 = con.prepareStatement("Select * from doctor_available Where ID=?");
                p2.setString(1, Book);
                ResultSet rs6 = p2.executeQuery();
                if (rs6.next()) {
                    String bid1 = jTextField29.getText();
                    PreparedStatement p1 = con.prepareStatement("Delete From doctor_available Where ID=?");
                    p1.setString(1, bid1);
                    p1.executeUpdate();
                    JOptionPane.showMessageDialog(null, "Delete Complete");
                    jTextField29.setText("");

                    try {
                        //if clicked again refresh the table to avoid the duplicate values
                        jTable4.setModel(new DefaultTableModel());
                        String columnName = "Type";
                        String conditionValue = "Doctor";
                        String qry = "Select * from doctor_available";
                        PreparedStatement p = con.prepareStatement(qry);
                        ResultSet rs = p.executeQuery(qry);
                        ResultSetMetaData rsmd = rs.getMetaData();
                        DefaultTableModel model = (DefaultTableModel) jTable4.getModel();

                        int cols = rsmd.getColumnCount();
                        String[] colName = new String[cols];
                        for (int i = 0; i < cols; i++) {
                            colName[i] = rsmd.getColumnName(i + 1);
                            model.setColumnIdentifiers(colName);

                            String id, name, st, date, sp;
                            while (rs.next()) {
                                id = rs.getString(1);
                                name = rs.getString(2);
                                st = rs.getString(3);
                                date = rs.getString(4);
                                sp = rs.getString(5);

                                String[] row = {id, name, st, date, sp};
                                model.addRow(row);
                            }

                        }

                    } catch (Exception ex) {
                        JOptionPane.showMessageDialog(null, ex);
                    }

                } else {
                    JOptionPane.showMessageDialog(null, "Id not Found");
                    jTextField29.setText("");
                    jTextField29.requestFocus();
                }
            }

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
    }//GEN-LAST:event_jButton36ActionPerformed

    private void jLabel55ComponentHidden(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jLabel55ComponentHidden
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel55ComponentHidden

    private void jButton37ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton37ActionPerformed
        // TODO add your handling code here:
        String Name = "";
        try {
            //if clicked again refresh the table to avoid the duplicate values
            String search = jTextField30.getText();
            if (search.equals("")) {
                JOptionPane.showMessageDialog(null, "Enter a valid input User Id,Name you want to Know ");
                jTextField30.setText("");
                jTextField30.requestFocus();

                jTable5.setModel(new DefaultTableModel());

                String qry = "Select Id,FullName,Address,Mobile,Email from details Where Type='User'";
                PreparedStatement p1 = con.prepareStatement(qry);
                ResultSet rs1 = p1.executeQuery(qry);
                ResultSetMetaData rsmd1 = rs1.getMetaData();
                DefaultTableModel model1 = (DefaultTableModel) jTable5.getModel();

                int cols1 = rsmd1.getColumnCount();
                String[] colName1 = new String[cols1];
                for (int i = 0; i < cols1; i++) {
                    colName1[i] = rsmd1.getColumnName(i + 1);
                    model1.setColumnIdentifiers(colName1);

                    String id, name, add, mobile, mail;
                    while (rs1.next()) {
                        id = rs1.getString(1);
                        name = rs1.getString(2);
                        add = rs1.getString(3);
                        mobile = rs1.getString(4);
                        mail = rs1.getString(5);

                        String[] row1 = {id, name, add, mobile, mail};
                        model1.addRow(row1);
                    }

                }
            } else {

                jTable5.setModel(new DefaultTableModel());
                PreparedStatement p = con.prepareStatement("Select Id,FullName,Address,Mobile,Email from details Where Type='User' AND id=? OR FullName=?");
                p.setString(1, search);
                p.setString(2, search);
                ResultSet rs = p.executeQuery();
                ResultSetMetaData rsmd = rs.getMetaData();
                DefaultTableModel model = (DefaultTableModel) jTable5.getModel();

                int cols = rsmd.getColumnCount();
                String[] colName = new String[cols];
                for (int i = 0; i < cols; i++) {
                    colName[i] = rsmd.getColumnName(i + 1);
                    model.setColumnIdentifiers(colName);

                    String id, name, add, mobile, mail;
                    while (rs.next()) {
                        id = rs.getString(1);
                        name = rs.getString(2);
                        add = rs.getString(3);
                        mobile = rs.getString(4);
                        mail = rs.getString(5);
                        Name = name;

                        String[] row = {id, name, add, mobile, mail};
                        model.addRow(row);
                    }

                }
                if (Name.equals("")) {
                    JOptionPane.showMessageDialog(null, "NO Result found");
                    try {
                        jTextField30.setText("");
                        jTextField30.requestFocus();

                        jTable5.setModel(new DefaultTableModel());

                        String qry = "Select Id,FullName,Address,Mobile,Email from details Where Type='User'";
                        PreparedStatement p1 = con.prepareStatement(qry);
                        ResultSet rs1 = p1.executeQuery(qry);
                        ResultSetMetaData rsmd1 = rs1.getMetaData();
                        DefaultTableModel model1 = (DefaultTableModel) jTable5.getModel();

                        int cols1 = rsmd1.getColumnCount();
                        String[] colName1 = new String[cols1];
                        for (int i = 0; i < cols1; i++) {
                            colName1[i] = rsmd1.getColumnName(i + 1);
                            model1.setColumnIdentifiers(colName1);

                            String id, name, add, mobile, mail;
                            while (rs1.next()) {
                                id = rs1.getString(1);
                                name = rs1.getString(2);
                                add = rs1.getString(3);
                                mobile = rs1.getString(4);
                                mail = rs1.getString(5);

                                String[] row1 = {id, name, add, mobile, mail};
                                model1.addRow(row1);
                            }

                        }

                    } catch (Exception ex) {
                        JOptionPane.showMessageDialog(null, ex);
                    }
                }
            }

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
    }//GEN-LAST:event_jButton37ActionPerformed

    private void jButton38ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton38ActionPerformed
        // TODO add your handling code here:
        jTabbedPane1.setSelectedIndex(3);
        jPanel17.setVisible(false);
        jPanel18.setVisible(true);
    }//GEN-LAST:event_jButton38ActionPerformed

    private void jButton39ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton39ActionPerformed
        // TODO add your handling code here:
        jTabbedPane1.setSelectedIndex(4);
        jPanel19.setVisible(false);
        jPanel20.setVisible(true);
    }//GEN-LAST:event_jButton39ActionPerformed

    private void jButton40ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton40ActionPerformed
        // TODO add your handling code here:
        jTabbedPane1.setSelectedIndex(11);
        try {
            //if clicked again refresh the table to avoid the duplicate values
            jTable6.setModel(new DefaultTableModel());
            String columnName = "Type";
            String conditionValue = "Doctor";
            String qry = "Select Id,FullName,Address,Mobile,Email from details Where Type='User'";
            PreparedStatement p = con.prepareStatement(qry);
            ResultSet rs = p.executeQuery(qry);
            ResultSetMetaData rsmd = rs.getMetaData();
            DefaultTableModel model = (DefaultTableModel) jTable6.getModel();

            int cols = rsmd.getColumnCount();
            String[] colName = new String[cols];
            for (int i = 0; i < cols; i++) {
                colName[i] = rsmd.getColumnName(i + 1);
                model.setColumnIdentifiers(colName);

                String id, name, add, mob, mail;
                while (rs.next()) {
                    id = rs.getString(1);
                    name = rs.getString(2);
                    add = rs.getString(3);
                    mob = rs.getString(4);
                    mail = rs.getString(5);

                    String[] row = {id, name, add, mob, mail};
                    model.addRow(row);
                }

            }

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
    }//GEN-LAST:event_jButton40ActionPerformed

    private void jButton41ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton41ActionPerformed
        // TODO add your handling code here:
        jTabbedPane1.setSelectedIndex(10);
        try {
            //if clicked again refresh the table to avoid the duplicate values
            jTable5.setModel(new DefaultTableModel());
            String columnName = "Type";
            String conditionValue = "Doctor";
            String qry = "Select Id,FullName,Address,Mobile,Email from details Where Type='User'";
            PreparedStatement p = con.prepareStatement(qry);
            ResultSet rs = p.executeQuery(qry);
            ResultSetMetaData rsmd = rs.getMetaData();
            DefaultTableModel model = (DefaultTableModel) jTable5.getModel();

            int cols = rsmd.getColumnCount();
            String[] colName = new String[cols];
            for (int i = 0; i < cols; i++) {
                colName[i] = rsmd.getColumnName(i + 1);
                model.setColumnIdentifiers(colName);

                String id, name, add, mob, mail;
                while (rs.next()) {
                    id = rs.getString(1);
                    name = rs.getString(2);
                    add = rs.getString(3);
                    mob = rs.getString(4);
                    mail = rs.getString(5);

                    String[] row = {id, name, add, mob, mail};
                    model.addRow(row);
                }

            }

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
    }//GEN-LAST:event_jButton41ActionPerformed

    private void jButton42ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton42ActionPerformed
        // TODO add your handling code here:
        jTabbedPane1.setSelectedIndex(10);
        try {
            //if clicked again refresh the table to avoid the duplicate values
            jTable5.setModel(new DefaultTableModel());
            String columnName = "Type";
            String conditionValue = "Doctor";
            String qry = "Select Id,FullName,Address,Mobile,Email from details Where Type='User'";
            PreparedStatement p = con.prepareStatement(qry);
            ResultSet rs = p.executeQuery(qry);
            ResultSetMetaData rsmd = rs.getMetaData();
            DefaultTableModel model = (DefaultTableModel) jTable5.getModel();

            int cols = rsmd.getColumnCount();
            String[] colName = new String[cols];
            for (int i = 0; i < cols; i++) {
                colName[i] = rsmd.getColumnName(i + 1);
                model.setColumnIdentifiers(colName);

                String id, name, add, mob, mail;
                while (rs.next()) {
                    id = rs.getString(1);
                    name = rs.getString(2);
                    add = rs.getString(3);
                    mob = rs.getString(4);
                    mail = rs.getString(5);

                    String[] row = {id, name, add, mob, mail};
                    model.addRow(row);
                }

            }

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
    }//GEN-LAST:event_jButton42ActionPerformed

    private void jLabel57ComponentHidden(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jLabel57ComponentHidden
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel57ComponentHidden

    private void jButton43ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton43ActionPerformed
        // TODO add your handling code here:
        String Name = "";
        try {
            //if clicked again refresh the table to avoid the duplicate values
            String search = jTextField31.getText();
            if (search.equals("")) {
                JOptionPane.showMessageDialog(null, "Enter a valid input User Id,Name you want to Know ");
                jTextField31.setText("");
                jTextField31.requestFocus();

                jTable6.setModel(new DefaultTableModel());

                String qry = "Select Id,FullName,Address,Mobile,Email from details Where Type='User'";
                PreparedStatement p1 = con.prepareStatement(qry);
                ResultSet rs1 = p1.executeQuery(qry);
                ResultSetMetaData rsmd1 = rs1.getMetaData();
                DefaultTableModel model1 = (DefaultTableModel) jTable6.getModel();

                int cols1 = rsmd1.getColumnCount();
                String[] colName1 = new String[cols1];
                for (int i = 0; i < cols1; i++) {
                    colName1[i] = rsmd1.getColumnName(i + 1);
                    model1.setColumnIdentifiers(colName1);

                    String id, name, add, mobile, mail;
                    while (rs1.next()) {
                        id = rs1.getString(1);
                        name = rs1.getString(2);
                        add = rs1.getString(3);
                        mobile = rs1.getString(4);
                        mail = rs1.getString(5);

                        String[] row1 = {id, name, add, mobile, mail};
                        model1.addRow(row1);
                    }

                }
            } else {

                jTable6.setModel(new DefaultTableModel());
                PreparedStatement p = con.prepareStatement("Select Id,FullName,Address,Mobile,Email from details Where Type='User' AND id=? OR FullName=?");
                p.setString(1, search);
                p.setString(2, search);
                ResultSet rs = p.executeQuery();
                ResultSetMetaData rsmd = rs.getMetaData();
                DefaultTableModel model = (DefaultTableModel) jTable6.getModel();

                int cols = rsmd.getColumnCount();
                String[] colName = new String[cols];
                for (int i = 0; i < cols; i++) {
                    colName[i] = rsmd.getColumnName(i + 1);
                    model.setColumnIdentifiers(colName);

                    String id, name, add, mobile, mail;
                    while (rs.next()) {
                        id = rs.getString(1);
                        name = rs.getString(2);
                        add = rs.getString(3);
                        mobile = rs.getString(4);
                        mail = rs.getString(5);
                        Name = name;

                        String[] row = {id, name, add, mobile, mail};
                        model.addRow(row);
                    }

                }
                if (Name.equals("")) {
                    JOptionPane.showMessageDialog(null, "NO Result found");
                    try {
                        jTextField31.setText("");
                        jTextField31.requestFocus();

                        jTable6.setModel(new DefaultTableModel());

                        String qry = "Select Id,FullName,Address,Mobile,Email from details Where Type='User'";
                        PreparedStatement p1 = con.prepareStatement(qry);
                        ResultSet rs1 = p1.executeQuery(qry);
                        ResultSetMetaData rsmd1 = rs1.getMetaData();
                        DefaultTableModel model1 = (DefaultTableModel) jTable6.getModel();

                        int cols1 = rsmd1.getColumnCount();
                        String[] colName1 = new String[cols1];
                        for (int i = 0; i < cols1; i++) {
                            colName1[i] = rsmd1.getColumnName(i + 1);
                            model1.setColumnIdentifiers(colName1);

                            String id, name, add, mobile, mail;
                            while (rs1.next()) {
                                id = rs1.getString(1);
                                name = rs1.getString(2);
                                add = rs1.getString(3);
                                mobile = rs1.getString(4);
                                mail = rs1.getString(5);

                                String[] row1 = {id, name, add, mobile, mail};
                                model1.addRow(row1);
                            }

                        }

                    } catch (Exception ex) {
                        JOptionPane.showMessageDialog(null, ex);
                    }
                }
            }

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
    }//GEN-LAST:event_jButton43ActionPerformed

    private void jButton44ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton44ActionPerformed
        // TODO add your handling code here:
        try {
            String Book = jTextField32.getText();
            if (jTextField32.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "USer ID Cannot be Empty");
                jTextField32.setText("");
                jTextField32.requestFocus();
            } else {
                PreparedStatement p2 = con.prepareStatement("Select * from details Where ID=?");
                p2.setString(1, Book);
                ResultSet rs6 = p2.executeQuery();
                if (rs6.next()) {
                    String bid1 = jTextField32.getText();
                    PreparedStatement p1 = con.prepareStatement("Delete From details Where ID=?");
                    p1.setString(1, bid1);
                    p1.executeUpdate();
                    JOptionPane.showMessageDialog(null, "Delete Complete");
                    jTextField32.setText("");

                    try {
                        //if clicked again refresh the table to avoid the duplicate values
                        jTable6.setModel(new DefaultTableModel());
                        String columnName = "Type";
                        String conditionValue = "Doctor";
                        String qry = "Select Id,FullName,Address,Mobile,Email from details Where Type='User'";
                        PreparedStatement p = con.prepareStatement(qry);
                        ResultSet rs = p.executeQuery(qry);
                        ResultSetMetaData rsmd = rs.getMetaData();
                        DefaultTableModel model = (DefaultTableModel) jTable6.getModel();

                        int cols = rsmd.getColumnCount();
                        String[] colName = new String[cols];
                        for (int i = 0; i < cols; i++) {
                            colName[i] = rsmd.getColumnName(i + 1);
                            model.setColumnIdentifiers(colName);

                            String id, name, add, mob, mail;
                            while (rs.next()) {
                                id = rs.getString(1);
                                name = rs.getString(2);
                                add = rs.getString(3);
                                mob = rs.getString(4);
                                mail = rs.getString(5);

                                String[] row = {id, name, add, mob, mail};
                                model.addRow(row);
                            }

                        }

                    } catch (Exception ex) {
                        JOptionPane.showMessageDialog(null, ex);
                    }

                } else {
                    JOptionPane.showMessageDialog(null, "User Id not Found");
                    jTextField32.setText("");
                    jTextField32.requestFocus();
                }
            }

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
    }//GEN-LAST:event_jButton44ActionPerformed

    private void jButton45ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton45ActionPerformed
        // TODO add your handling code here:
        jTabbedPane1.setSelectedIndex(10);
    }//GEN-LAST:event_jButton45ActionPerformed

    private void jLabel60ComponentHidden(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jLabel60ComponentHidden
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel60ComponentHidden

    private void jButton46ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton46ActionPerformed
        // TODO add your handling code here:
        jTabbedPane1.setSelectedIndex(13);
        try {
            //if clicked again refresh the table to avoid the duplicate values
            jTable8.setModel(new DefaultTableModel());

            String qry = "Select * from appointment_details";
            PreparedStatement p = con.prepareStatement(qry);
            ResultSet rs = p.executeQuery();
            ResultSetMetaData rsmd = rs.getMetaData();
            DefaultTableModel model = (DefaultTableModel) jTable8.getModel();

            int cols = rsmd.getColumnCount();
            String[] colName = new String[cols];
            for (int i = 0; i < cols; i++) {
                colName[i] = rsmd.getColumnName(i + 1);
                model.setColumnIdentifiers(colName);

                String bid, name, cont, doc, date, st, ID;
                while (rs.next()) {
                    bid = rs.getString(1);
                    name = rs.getString(2);
                    cont = rs.getString(3);
                    doc = rs.getString(4);
                    date = rs.getString(5);
                    st = rs.getString(6);
                    ID = rs.getString(7);
                    String[] row = {bid, name, cont, doc, date, st, ID};
                    model.addRow(row);
                }

            }

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
    }//GEN-LAST:event_jButton46ActionPerformed

    private void jButton47ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton47ActionPerformed
        // TODO add your handling code here:
        String bid = jTextField35.getText();
        String cmb = (String) jComboBox5.getSelectedItem();

        try {
            if (jTextField35.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Booking ID Cannot be Empty");
                jTextField35.setText("");
                jTextField35.requestFocus();
            } else if (cmb.equals("Select")) {
                JOptionPane.showMessageDialog(null, "Status Cannot be Empty");
                jComboBox5.setSelectedIndex(0);
                jComboBox5.requestFocus();
            } else {
                PreparedStatement p2 = con.prepareStatement("Select * from appointment_details Where ID=?");
                p2.setString(1, bid);
                ResultSet rs6 = p2.executeQuery();
                if (rs6.next()) {
                    String bid1 = jTextField35.getText();
                    PreparedStatement p1 = con.prepareStatement("Update appointment_details Set Appointment_Status=? Where ID=?");
                    p1.setString(1, cmb);
                    p1.setString(2, bid1);
                    p1.executeUpdate();
                    JOptionPane.showMessageDialog(null, "Update Complete");
                    jTextField35.setText("");
                    jComboBox5.setSelectedIndex(0);

                    jTable8.setModel(new DefaultTableModel());

                    String qry = "Select * from appointment_details";
                    PreparedStatement p = con.prepareStatement(qry);
                    ResultSet rs = p.executeQuery();
                    ResultSetMetaData rsmd = rs.getMetaData();
                    DefaultTableModel model = (DefaultTableModel) jTable8.getModel();

                    int cols = rsmd.getColumnCount();
                    String[] colName = new String[cols];
                    for (int i = 0; i < cols; i++) {
                        colName[i] = rsmd.getColumnName(i + 1);
                        model.setColumnIdentifiers(colName);

                        String bid3, name, cont, doc, date, st, ID;
                        while (rs.next()) {
                            bid3 = rs.getString(1);
                            name = rs.getString(2);
                            cont = rs.getString(3);
                            doc = rs.getString(4);
                            date = rs.getString(5);
                            st = rs.getString(6);
                            ID = rs.getString(7);
                            String[] row = {bid3, name, cont, doc, date, st, ID};
                            model.addRow(row);
                        }

                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Booking ID not found");
                    jTextField35.setText("");
                    jTextField35.requestFocus();
                }
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
    }//GEN-LAST:event_jButton47ActionPerformed

    private void jButton48ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton48ActionPerformed
        // TODO add your handling code here:
        String Name = "";
        try {
            //if clicked again refresh the table to avoid the duplicate values
            String search = jTextField33.getText();
            if (search.equals("")) {
                JOptionPane.showMessageDialog(null, "Enter a valid input User Id OR Name OR Booking ID you want to Know ");
                jTextField33.setText("");
                jTextField33.requestFocus();

                jTable7.setModel(new DefaultTableModel());

                String qry = "Select * from appointment_details";
                PreparedStatement p = con.prepareStatement(qry);
                ResultSet rs = p.executeQuery();
                ResultSetMetaData rsmd = rs.getMetaData();
                DefaultTableModel model = (DefaultTableModel) jTable7.getModel();

                int cols = rsmd.getColumnCount();
                String[] colName = new String[cols];
                for (int i = 0; i < cols; i++) {
                    colName[i] = rsmd.getColumnName(i + 1);
                    model.setColumnIdentifiers(colName);

                    String bid, name, cont, doc, date, st, ID;
                    while (rs.next()) {
                        bid = rs.getString(1);
                        name = rs.getString(2);
                        cont = rs.getString(3);
                        doc = rs.getString(4);
                        date = rs.getString(5);
                        st = rs.getString(6);
                        ID = rs.getString(7);
                        String[] row = {bid, name, cont, doc, date, st, ID};
                        model.addRow(row);
                    }

                }
            } else {

                jTable7.setModel(new DefaultTableModel());
                PreparedStatement p = con.prepareStatement("Select * from appointment_details Where id=? OR patient_Name=? OR UserID=?");
                p.setString(1, search);
                p.setString(2, search);
                p.setString(3, search);
                ResultSet rs = p.executeQuery();
                ResultSetMetaData rsmd = rs.getMetaData();
                DefaultTableModel model = (DefaultTableModel) jTable7.getModel();

                int cols = rsmd.getColumnCount();
                String[] colName = new String[cols];
                for (int i = 0; i < cols; i++) {
                    colName[i] = rsmd.getColumnName(i + 1);
                    model.setColumnIdentifiers(colName);

                    String bid, name, cont, doc, date, st, ID;
                    while (rs.next()) {
                        bid = rs.getString(1);
                        name = rs.getString(2);
                        cont = rs.getString(3);
                        doc = rs.getString(4);
                        date = rs.getString(5);
                        st = rs.getString(6);
                        ID = rs.getString(7);
                        Name = name;
                        String[] row = {bid, name, cont, doc, date, st, ID};
                        model.addRow(row);
                    }

                }
                if (Name.equals("")) {
                    JOptionPane.showMessageDialog(null, "NO Result found");
                    try {
                        jTextField33.setText("");
                        jTextField33.requestFocus();

                        jTable7.setModel(new DefaultTableModel());

                        String qry = "Select * from appointment_details";
                        PreparedStatement p1 = con.prepareStatement(qry);
                        ResultSet rs1 = p1.executeQuery(qry);
                        ResultSetMetaData rsmd1 = rs1.getMetaData();
                        DefaultTableModel model1 = (DefaultTableModel) jTable7.getModel();

                        int cols1 = rsmd1.getColumnCount();
                        String[] colName1 = new String[cols1];
                        for (int i = 0; i < cols1; i++) {
                            colName1[i] = rsmd1.getColumnName(i + 1);
                            model1.setColumnIdentifiers(colName1);

                            String bid, name, cont, doc, date, st, ID;
                            while (rs1.next()) {
                                bid = rs1.getString(1);
                                name = rs1.getString(2);
                                cont = rs1.getString(3);
                                doc = rs1.getString(4);
                                date = rs1.getString(5);
                                st = rs1.getString(6);
                                ID = rs1.getString(7);
                                String[] row1 = {bid, name, cont, doc, date, st, ID};
                                model1.addRow(row1);
                            }

                        }

                    } catch (Exception ex) {
                        JOptionPane.showMessageDialog(null, ex);
                    }
                }
            }

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
    }//GEN-LAST:event_jButton48ActionPerformed

    private void jButton49ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton49ActionPerformed
        // TODO add your handling code here:
        String Name = "";
        try {
            //if clicked again refresh the table to avoid the duplicate values
            String search = jTextField34.getText();
            if (search.equals("")) {
                JOptionPane.showMessageDialog(null, "Enter a valid input User Id OR Name OR Booking ID you want to Know ");
                jTextField34.setText("");
                jTextField34.requestFocus();

                jTable8.setModel(new DefaultTableModel());

                String qry = "Select * from appointment_details";
                PreparedStatement p = con.prepareStatement(qry);
                ResultSet rs = p.executeQuery();
                ResultSetMetaData rsmd = rs.getMetaData();
                DefaultTableModel model = (DefaultTableModel) jTable8.getModel();

                int cols = rsmd.getColumnCount();
                String[] colName = new String[cols];
                for (int i = 0; i < cols; i++) {
                    colName[i] = rsmd.getColumnName(i + 1);
                    model.setColumnIdentifiers(colName);

                    String bid, name, cont, doc, date, st, ID;
                    while (rs.next()) {
                        bid = rs.getString(1);
                        name = rs.getString(2);
                        cont = rs.getString(3);
                        doc = rs.getString(4);
                        date = rs.getString(5);
                        st = rs.getString(6);
                        ID = rs.getString(7);
                        String[] row = {bid, name, cont, doc, date, st, ID};
                        model.addRow(row);
                    }

                }
            } else {

                jTable8.setModel(new DefaultTableModel());
                PreparedStatement p = con.prepareStatement("Select * from appointment_details Where id=? OR patient_Name=? OR UserID=?");
                p.setString(1, search);
                p.setString(2, search);
                p.setString(3, search);
                ResultSet rs = p.executeQuery();
                ResultSetMetaData rsmd = rs.getMetaData();
                DefaultTableModel model = (DefaultTableModel) jTable8.getModel();

                int cols = rsmd.getColumnCount();
                String[] colName = new String[cols];
                for (int i = 0; i < cols; i++) {
                    colName[i] = rsmd.getColumnName(i + 1);
                    model.setColumnIdentifiers(colName);

                    String bid, name, cont, doc, date, st, ID;
                    while (rs.next()) {
                        bid = rs.getString(1);
                        name = rs.getString(2);
                        cont = rs.getString(3);
                        doc = rs.getString(4);
                        date = rs.getString(5);
                        st = rs.getString(6);
                        ID = rs.getString(7);
                        Name = name;
                        String[] row = {bid, name, cont, doc, date, st, ID};
                        model.addRow(row);
                    }

                }
                if (Name.equals("")) {
                    JOptionPane.showMessageDialog(null, "NO Result found");
                    try {
                        jTextField34.setText("");
                        jTextField34.requestFocus();

                        jTable8.setModel(new DefaultTableModel());

                        String qry = "Select * from appointment_details";
                        PreparedStatement p1 = con.prepareStatement(qry);
                        ResultSet rs1 = p1.executeQuery(qry);
                        ResultSetMetaData rsmd1 = rs1.getMetaData();
                        DefaultTableModel model1 = (DefaultTableModel) jTable8.getModel();

                        int cols1 = rsmd1.getColumnCount();
                        String[] colName1 = new String[cols1];
                        for (int i = 0; i < cols1; i++) {
                            colName1[i] = rsmd1.getColumnName(i + 1);
                            model1.setColumnIdentifiers(colName1);

                            String bid, name, cont, doc, date, st, ID;
                            while (rs1.next()) {
                                bid = rs1.getString(1);
                                name = rs1.getString(2);
                                cont = rs1.getString(3);
                                doc = rs1.getString(4);
                                date = rs1.getString(5);
                                st = rs1.getString(6);
                                ID = rs1.getString(7);
                                String[] row1 = {bid, name, cont, doc, date, st, ID};
                                model1.addRow(row1);
                            }

                        }

                    } catch (Exception ex) {
                        JOptionPane.showMessageDialog(null, ex);
                    }
                }
            }

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
    }//GEN-LAST:event_jButton49ActionPerformed

    private void jButton50ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton50ActionPerformed
        // TODO add your handling code here:
        jTabbedPane1.setSelectedIndex(12);
    }//GEN-LAST:event_jButton50ActionPerformed

    private void jTextField8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField8ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField8ActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void jButton16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton16ActionPerformed
        // TODO add your handling code here:
        jTabbedPane1.setSelectedIndex(2);
    }//GEN-LAST:event_jButton16ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminHome.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminHome.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminHome.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminHome.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdminHome("").setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton16;
    private javax.swing.JButton jButton17;
    private javax.swing.JButton jButton18;
    private javax.swing.JButton jButton19;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton20;
    private javax.swing.JButton jButton21;
    private javax.swing.JButton jButton22;
    private javax.swing.JButton jButton23;
    private javax.swing.JButton jButton24;
    private javax.swing.JButton jButton25;
    private javax.swing.JButton jButton26;
    private javax.swing.JButton jButton27;
    private javax.swing.JButton jButton28;
    private javax.swing.JButton jButton29;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton30;
    private javax.swing.JButton jButton31;
    private javax.swing.JButton jButton32;
    private javax.swing.JButton jButton33;
    private javax.swing.JButton jButton34;
    private javax.swing.JButton jButton35;
    private javax.swing.JButton jButton36;
    private javax.swing.JButton jButton37;
    private javax.swing.JButton jButton38;
    private javax.swing.JButton jButton39;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton40;
    private javax.swing.JButton jButton41;
    private javax.swing.JButton jButton42;
    private javax.swing.JButton jButton43;
    private javax.swing.JButton jButton44;
    private javax.swing.JButton jButton45;
    private javax.swing.JButton jButton46;
    private javax.swing.JButton jButton47;
    private javax.swing.JButton jButton48;
    private javax.swing.JButton jButton49;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton50;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JComboBox<String> jComboBox3;
    private javax.swing.JComboBox<String> jComboBox4;
    private javax.swing.JComboBox<String> jComboBox5;
    private com.toedter.calendar.JDateChooser jDateChooser2;
    private com.toedter.calendar.JDateChooser jDateChooser3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JLabel jLabel56;
    private javax.swing.JLabel jLabel57;
    private javax.swing.JLabel jLabel58;
    private javax.swing.JLabel jLabel59;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel60;
    private javax.swing.JLabel jLabel61;
    private javax.swing.JLabel jLabel62;
    private javax.swing.JLabel jLabel63;
    private javax.swing.JLabel jLabel64;
    private javax.swing.JLabel jLabel65;
    private javax.swing.JLabel jLabel66;
    private javax.swing.JLabel jLabel67;
    private javax.swing.JLabel jLabel68;
    private javax.swing.JLabel jLabel69;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JPasswordField jPasswordField3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private javax.swing.JTable jTable4;
    private javax.swing.JTable jTable5;
    private javax.swing.JTable jTable6;
    private javax.swing.JTable jTable7;
    private javax.swing.JTable jTable8;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField10;
    private javax.swing.JTextField jTextField11;
    private javax.swing.JTextField jTextField12;
    private javax.swing.JTextField jTextField13;
    private javax.swing.JTextField jTextField14;
    private javax.swing.JTextField jTextField15;
    private javax.swing.JTextField jTextField16;
    private javax.swing.JTextField jTextField17;
    private javax.swing.JTextField jTextField18;
    private javax.swing.JTextField jTextField19;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField20;
    private javax.swing.JTextField jTextField21;
    private javax.swing.JTextField jTextField22;
    private javax.swing.JTextField jTextField23;
    private javax.swing.JTextField jTextField24;
    private javax.swing.JTextField jTextField25;
    private javax.swing.JTextField jTextField26;
    private javax.swing.JTextField jTextField27;
    private javax.swing.JTextField jTextField28;
    private javax.swing.JTextField jTextField29;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField30;
    private javax.swing.JTextField jTextField31;
    private javax.swing.JTextField jTextField32;
    private javax.swing.JTextField jTextField33;
    private javax.swing.JTextField jTextField34;
    private javax.swing.JTextField jTextField35;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JTextField jTextField9;
    // End of variables declaration//GEN-END:variables
}
