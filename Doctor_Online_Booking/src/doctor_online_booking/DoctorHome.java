/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package doctor_online_booking;

import java.sql.*;
import java.sql.PreparedStatement;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author danus
 */
public class DoctorHome extends javax.swing.JFrame {

    /**
     * Creates new form DoctorHome
     */
    //create object to database class
    Database db = new Database();
    //calling DBconnect method using object and main connenction class
    Connection con = db.DBConnect();
    String id;

    public DoctorHome(String ID) {
        initComponents();
        id = ID;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jTextField5 = new javax.swing.JTextField();
        jTextField6 = new javax.swing.JTextField();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jPasswordField1 = new javax.swing.JPasswordField();
        jLabel3 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jButton8 = new javax.swing.JButton();
        jTextField7 = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton9 = new javax.swing.JButton();
        jTextField8 = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel8 = new javax.swing.JLabel();
        jButton10 = new javax.swing.JButton();
        jButton16 = new javax.swing.JButton();
        jTextField10 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jLabel34 = new javax.swing.JLabel();
        jTextField21 = new javax.swing.JTextField();
        jLabel35 = new javax.swing.JLabel();
        jTextField22 = new javax.swing.JTextField();
        jLabel36 = new javax.swing.JLabel();
        jTextField23 = new javax.swing.JTextField();
        jLabel37 = new javax.swing.JLabel();
        jTextField24 = new javax.swing.JTextField();
        jLabel38 = new javax.swing.JLabel();
        jDateChooser2 = new com.toedter.calendar.JDateChooser();
        jButton11 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jButton13 = new javax.swing.JButton();
        jLabel19 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable4 = new javax.swing.JTable();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jTextField9 = new javax.swing.JTextField();
        jButton14 = new javax.swing.JButton();
        jButton15 = new javax.swing.JButton();
        jLabel20 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel27 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel28 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel29 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jLabel24 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 0, 0));
        jLabel6.setText("Online Appointment Booking");
        jPanel2.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 40, 510, 60));

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 0, 0));
        jLabel9.setText("Healthcare Industry");
        jPanel2.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 100, 390, -1));

        jLabel7.setBackground(new java.awt.Color(255, 255, 255));
        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 0, 0));
        jLabel7.setText("<html> <p>A doctor, also called a physician, is a licensed healthcare provider who serves patients.They have had specialized training in medicine. Primary care responsibilities vary throughout medical professions. For example, an adult patient would see a primary care physician. Should the patient be a child, a physician would be consulted. Let's look at the responsibilities and work of a doctor. </p><br><br> <p>A consultation occurs when a patient and a doctor meet in a hospital, clinic, or doctor's office. During this session, a doctor will ask you comprehensive questions about your feelings and symptoms.  These are just a few examples of the in-depth questions a doctor might ask to determine your health status right now. In addition to these kinds of questions, a doctor would take your vital signs.\n The top four to six health indicators that indicate how the body's essential functions are doing   </p> </html>");
        jLabel7.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jLabel7.setVerticalTextPosition(javax.swing.SwingConstants.TOP);
        jPanel2.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 190, 700, 480));

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/doctor_online_booking/Image/bg6.jpg"))); // NOI18N
        jLabel1.setText("\n");
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 730, 630));

        jTabbedPane1.addTab("tab1", jPanel2);

        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel10.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(0, 0, 0));
        jLabel10.setText("Doctor ID");
        jPanel3.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 100, -1, -1));

        jLabel11.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(0, 0, 0));
        jLabel11.setText("Full Name");
        jPanel3.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 150, -1, -1));

        jLabel12.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(0, 0, 0));
        jLabel12.setText("Password");
        jPanel3.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 200, -1, -1));

        jLabel13.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(0, 0, 0));
        jLabel13.setText("Address");
        jPanel3.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 250, -1, -1));

        jLabel14.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(0, 0, 0));
        jLabel14.setText("Specialist");
        jPanel3.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 400, -1, -1));

        jLabel15.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(0, 0, 0));
        jLabel15.setText("Email");
        jPanel3.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 350, -1, -1));

        jLabel16.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(0, 0, 0));
        jLabel16.setText("Mobile");
        jPanel3.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 300, -1, -1));
        jPanel3.add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 350, 240, 30));
        jPanel3.add(jTextField2, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 400, 240, 30));
        jPanel3.add(jTextField3, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 250, 240, 30));
        jPanel3.add(jTextField4, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 300, 240, 30));
        jPanel3.add(jTextField5, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 100, 240, 30));
        jPanel3.add(jTextField6, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 150, 240, 30));

        jButton6.setBackground(new java.awt.Color(153, 255, 255));
        jButton6.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jButton6.setForeground(new java.awt.Color(0, 0, 0));
        jButton6.setText("Clear");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton6, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 470, 100, 40));

        jButton7.setBackground(new java.awt.Color(153, 255, 255));
        jButton7.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jButton7.setForeground(new java.awt.Color(0, 0, 0));
        jButton7.setText("Update");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton7, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 470, 100, 40));
        jPanel3.add(jPasswordField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 200, 240, 30));

        jLabel3.setBackground(new java.awt.Color(0, 0, 0));
        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/doctor_online_booking/Image/bg6.jpg"))); // NOI18N
        jPanel3.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 730, 600));

        jTabbedPane1.addTab("tab2", jPanel3);

        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton8.setBackground(new java.awt.Color(116, 105, 182));
        jButton8.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton8.setForeground(new java.awt.Color(0, 0, 0));
        jButton8.setText("Search");
        jButton8.setBorder(null);
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        jPanel4.add(jButton8, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 40, 80, 30));
        jPanel4.add(jTextField7, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 40, 190, -1));

        jLabel17.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(0, 0, 0));
        jLabel17.setText("Current Service Doctors");
        jPanel4.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, -1, -1));

        jTable1.setAutoCreateRowSorter(true);
        jTable1.setBackground(new java.awt.Color(255, 230, 230));
        jTable1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jTable1.setForeground(new java.awt.Color(0, 0, 0));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTable1.setGridColor(new java.awt.Color(255, 230, 230));
        jTable1.setSelectionForeground(new java.awt.Color(255, 230, 230));
        jScrollPane1.setViewportView(jTable1);

        jPanel4.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, 630, 150));

        jButton9.setBackground(new java.awt.Color(116, 105, 182));
        jButton9.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton9.setForeground(new java.awt.Color(0, 0, 0));
        jButton9.setText("Search");
        jButton9.setBorder(null);
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });
        jPanel4.add(jButton9, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 270, 80, 30));
        jPanel4.add(jTextField8, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 270, 190, -1));

        jLabel18.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(0, 0, 0));
        jLabel18.setText("Doctors Available Date");
        jPanel4.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 290, -1, -1));

        jTable3.setAutoCreateRowSorter(true);
        jTable3.setBackground(new java.awt.Color(255, 230, 230));
        jTable3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jTable3.setForeground(new java.awt.Color(0, 0, 0));
        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTable3.setGridColor(new java.awt.Color(255, 230, 230));
        jScrollPane3.setViewportView(jTable3);

        jPanel4.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 340, 630, 150));

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/doctor_online_booking/Image/bg6.jpg"))); // NOI18N
        jPanel4.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 740, 590));

        jTabbedPane1.addTab("tab3", jPanel4);

        jPanel5.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable2.setBackground(new java.awt.Color(255, 230, 230));
        jTable2.setForeground(new java.awt.Color(0, 0, 0));
        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jTable2.setGridColor(new java.awt.Color(255, 230, 230));
        jScrollPane2.setViewportView(jTable2);

        jPanel5.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 190, 610, 290));

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 0, 0));
        jLabel8.setText("Your Appointments");
        jPanel5.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 150, -1, -1));

        jButton10.setBackground(new java.awt.Color(153, 255, 255));
        jButton10.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton10.setForeground(new java.awt.Color(0, 0, 0));
        jButton10.setText("Book a Appointment");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });
        jPanel5.add(jButton10, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 500, 220, 40));

        jButton16.setBackground(new java.awt.Color(116, 105, 182));
        jButton16.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton16.setForeground(new java.awt.Color(0, 0, 0));
        jButton16.setText("Search");
        jButton16.setBorder(null);
        jButton16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton16ActionPerformed(evt);
            }
        });
        jPanel5.add(jButton16, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 40, 80, 30));
        jPanel5.add(jTextField10, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 40, 190, -1));

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/doctor_online_booking/Image/bg6.jpg"))); // NOI18N
        jPanel5.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 750, 610));

        jTabbedPane1.addTab("tab4", jPanel5);

        jPanel6.setBackground(new java.awt.Color(153, 255, 255));
        jPanel6.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel34.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel34.setForeground(new java.awt.Color(0, 0, 0));
        jLabel34.setText("Booking ID");
        jPanel6.add(jLabel34, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 90, -1, -1));

        jTextField21.setBackground(new java.awt.Color(255, 255, 255));
        jTextField21.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jTextField21.setForeground(new java.awt.Color(0, 0, 0));
        jPanel6.add(jTextField21, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 90, 260, -1));

        jLabel35.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel35.setForeground(new java.awt.Color(0, 0, 0));
        jLabel35.setText("Patient Name");
        jPanel6.add(jLabel35, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 140, -1, -1));

        jTextField22.setBackground(new java.awt.Color(255, 255, 255));
        jTextField22.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jTextField22.setForeground(new java.awt.Color(0, 0, 0));
        jPanel6.add(jTextField22, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 140, 260, -1));

        jLabel36.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel36.setForeground(new java.awt.Color(0, 0, 0));
        jLabel36.setText("Mobile");
        jPanel6.add(jLabel36, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 200, -1, -1));

        jTextField23.setBackground(new java.awt.Color(255, 255, 255));
        jTextField23.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jTextField23.setForeground(new java.awt.Color(0, 0, 0));
        jPanel6.add(jTextField23, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 200, 260, -1));

        jLabel37.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel37.setForeground(new java.awt.Color(0, 0, 0));
        jLabel37.setText("Doctor Name");
        jPanel6.add(jLabel37, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 260, -1, -1));

        jTextField24.setBackground(new java.awt.Color(255, 255, 255));
        jTextField24.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jTextField24.setForeground(new java.awt.Color(0, 0, 0));
        jPanel6.add(jTextField24, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 260, 260, -1));

        jLabel38.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel38.setForeground(new java.awt.Color(0, 0, 0));
        jLabel38.setText("Appointment Date");
        jPanel6.add(jLabel38, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 320, -1, -1));

        jDateChooser2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel6.add(jDateChooser2, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 320, 260, 40));

        jButton11.setBackground(new java.awt.Color(153, 255, 255));
        jButton11.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton11.setForeground(new java.awt.Color(0, 0, 0));
        jButton11.setText("Clear");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });
        jPanel6.add(jButton11, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 400, 110, 50));

        jButton12.setBackground(new java.awt.Color(153, 255, 255));
        jButton12.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton12.setForeground(new java.awt.Color(0, 0, 0));
        jButton12.setText("Subbmit");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });
        jPanel6.add(jButton12, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 400, 110, 50));

        jButton13.setBackground(new java.awt.Color(153, 255, 255));
        jButton13.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton13.setForeground(new java.awt.Color(0, 0, 0));
        jButton13.setText("Cancel Booking");
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });
        jPanel6.add(jButton13, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 480, 210, -1));

        jLabel19.setIcon(new javax.swing.ImageIcon(getClass().getResource("/doctor_online_booking/Image/bg6.jpg"))); // NOI18N
        jPanel6.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 740, 620));

        jTabbedPane1.addTab("tab5", jPanel6);

        jPanel7.setBackground(new java.awt.Color(153, 255, 255));
        jPanel7.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable4.setAutoCreateRowSorter(true);
        jTable4.setBackground(new java.awt.Color(255, 230, 230));
        jTable4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jTable4.setForeground(new java.awt.Color(0, 0, 0));
        jTable4.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTable4.setGridColor(new java.awt.Color(255, 230, 230));
        jTable4.setSelectionForeground(new java.awt.Color(255, 230, 230));
        jScrollPane4.setViewportView(jTable4);

        jPanel7.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 150, 630, 170));

        jLabel21.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(0, 0, 0));
        jLabel21.setText("Your Bookings");
        jPanel7.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 110, -1, -1));

        jLabel22.setBackground(new java.awt.Color(255, 255, 255));
        jLabel22.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(0, 0, 0));
        jLabel22.setText("Booking ID");
        jPanel7.add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 350, -1, -1));

        jTextField9.setBackground(new java.awt.Color(255, 255, 255));
        jTextField9.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jTextField9.setForeground(new java.awt.Color(0, 0, 0));
        jPanel7.add(jTextField9, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 350, 260, 30));

        jButton14.setBackground(new java.awt.Color(153, 255, 255));
        jButton14.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton14.setForeground(new java.awt.Color(0, 0, 0));
        jButton14.setText("Cancel Booking");
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });
        jPanel7.add(jButton14, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 420, 210, -1));

        jButton15.setBackground(new java.awt.Color(153, 255, 255));
        jButton15.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton15.setForeground(new java.awt.Color(0, 0, 0));
        jButton15.setText("Back");
        jButton15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton15ActionPerformed(evt);
            }
        });
        jPanel7.add(jButton15, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 490, 120, 30));

        jLabel20.setIcon(new javax.swing.ImageIcon(getClass().getResource("/doctor_online_booking/Image/bg6.jpg"))); // NOI18N
        jPanel7.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 740, 620));

        jTabbedPane1.addTab("tab6", jPanel7);

        getContentPane().add(jTabbedPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, -30, 730, 610));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel27.setIcon(new javax.swing.ImageIcon(getClass().getResource("/doctor_online_booking/Image/addUser.png"))); // NOI18N
        jPanel1.add(jLabel27, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 400, 30, 30));

        jLabel26.setIcon(new javax.swing.ImageIcon(getClass().getResource("/doctor_online_booking/Image/customer_25px.png"))); // NOI18N
        jPanel1.add(jLabel26, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 340, 30, 30));

        jLabel25.setIcon(new javax.swing.ImageIcon(getClass().getResource("/doctor_online_booking/Image/dashbord.png"))); // NOI18N
        jPanel1.add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 280, 20, 30));

        jLabel2.setBackground(new java.awt.Color(116, 105, 182));
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/doctor_online_booking/Image/doc3.png"))); // NOI18N
        jLabel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(-40, 0, 250, 260));

        jButton1.setBackground(new java.awt.Color(153, 255, 255));
        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jButton1.setForeground(new java.awt.Color(0, 0, 0));
        jButton1.setText("DashBoard");
        jButton1.setBorder(new javax.swing.border.MatteBorder(null));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 270, 140, 50));

        jLabel28.setIcon(new javax.swing.ImageIcon(getClass().getResource("/doctor_online_booking/Image/purchase_40px.png"))); // NOI18N
        jPanel1.add(jLabel28, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 460, 40, 30));

        jButton2.setBackground(new java.awt.Color(153, 255, 255));
        jButton2.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jButton2.setForeground(new java.awt.Color(0, 0, 0));
        jButton2.setText("Profile");
        jButton2.setBorder(new javax.swing.border.MatteBorder(null));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 330, 140, 50));

        jButton3.setBackground(new java.awt.Color(153, 255, 255));
        jButton3.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jButton3.setForeground(new java.awt.Color(0, 0, 0));
        jButton3.setText("Doctors");
        jButton3.setBorder(new javax.swing.border.MatteBorder(null));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 390, 140, 50));

        jLabel29.setIcon(new javax.swing.ImageIcon(getClass().getResource("/doctor_online_booking/Image/logout.png"))); // NOI18N
        jPanel1.add(jLabel29, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 520, 50, 50));

        jButton4.setBackground(new java.awt.Color(153, 255, 255));
        jButton4.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jButton4.setForeground(new java.awt.Color(0, 0, 0));
        jButton4.setText("Bookings");
        jButton4.setBorder(new javax.swing.border.MatteBorder(null));
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 450, 140, 50));

        jButton5.setBackground(new java.awt.Color(0, 0, 204));
        jButton5.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jButton5.setForeground(new java.awt.Color(255, 255, 255));
        jButton5.setText("Logout");
        jButton5.setBorder(new javax.swing.border.MatteBorder(null));
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 530, 130, 40));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 200, 580));

        jLabel24.setIcon(new javax.swing.ImageIcon(getClass().getResource("/doctor_online_booking/Image/bg6.jpg"))); // NOI18N
        getContentPane().add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(-5, 0, 880, 510));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        jTabbedPane1.setSelectedIndex(0);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        jTabbedPane1.setSelectedIndex(1);
        try {

            PreparedStatement p = con.prepareStatement("Select * from details Where id=?");
            p.setString(1, id);
            ResultSet rs = p.executeQuery();
            if (rs.next()) {
                jTextField5.setText(rs.getString(1));
                jTextField6.setText(rs.getString(2));
                jPasswordField1.setText(rs.getString(3));
                jTextField3.setText(rs.getString(4));
                jTextField4.setText(rs.getString(5));
                jTextField1.setText(rs.getString(6));
                jTextField2.setText(rs.getString(7));

            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        jTabbedPane1.setSelectedIndex(2);
        //first table view
        try {
            //if clicked again refresh the table to avoid the duplicate values
            jTable1.setModel(new DefaultTableModel());
            String columnName = "Type";
            String conditionValue = "Doctor";
            String qry = "Select Id,FullName,Specialist from details Where Type='Doctor'";
            PreparedStatement p = con.prepareStatement(qry);
            ResultSet rs = p.executeQuery(qry);
            ResultSetMetaData rsmd = rs.getMetaData();
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();

            int cols = rsmd.getColumnCount();
            String[] colName = new String[cols];
            for (int i = 0; i < cols; i++) {
                colName[i] = rsmd.getColumnName(i + 1);
                model.setColumnIdentifiers(colName);

                String id, name, sp;
                while (rs.next()) {
                    id = rs.getString(1);
                    name = rs.getString(2);
                    sp = rs.getString(3);

                    String[] row = {id, name, sp};
                    model.addRow(row);
                }

            }

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex);
        }

        //second table view
        try {
            //if clicked again refresh the table to avoid the duplicate values
            jTable3.setModel(new DefaultTableModel());
            String columnName = "Type";
            String conditionValue = "Doctor";
            String qry = "Select * from doctor_available";
            PreparedStatement p = con.prepareStatement(qry);
            ResultSet rs = p.executeQuery(qry);
            ResultSetMetaData rsmd = rs.getMetaData();
            DefaultTableModel model = (DefaultTableModel) jTable3.getModel();

            int cols = rsmd.getColumnCount();
            String[] colName = new String[cols];
            for (int i = 0; i < cols; i++) {
                colName[i] = rsmd.getColumnName(i + 1);
                model.setColumnIdentifiers(colName);

                String id, name, st, date, sp;
                while (rs.next()) {
                    id = rs.getString(1);
                    name = rs.getString(2);
                    st = rs.getString(3);
                    date = rs.getString(4);
                    sp = rs.getString(5);

                    String[] row = {id, name, st, date, sp};
                    model.addRow(row);
                }

            }

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        jTabbedPane1.setSelectedIndex(3);
        String dname = "";
        try {
            String qry1 = "Select * from details where ID=?";
            PreparedStatement p1 = con.prepareStatement(qry1);
            p1.setString(1, id);
            ResultSet rs1 = p1.executeQuery();
            while (rs1.next()) {
                dname = rs1.getString(2);
            }
            //if clicked again refresh the table to avoid the duplicate values
            jTable2.setModel(new DefaultTableModel());

            String qry = "Select * from appointment_details where Doctor_Name=?";
            PreparedStatement p = con.prepareStatement(qry);
            p.setString(1, dname);
            ResultSet rs = p.executeQuery();
            ResultSetMetaData rsmd = rs.getMetaData();
            DefaultTableModel model = (DefaultTableModel) jTable2.getModel();

            int cols = rsmd.getColumnCount();
            String[] colName = new String[cols];
            for (int i = 0; i < cols; i++) {
                colName[i] = rsmd.getColumnName(i + 1);
                model.setColumnIdentifiers(colName);

                String id, name, cont, date, st, uid;
                while (rs.next()) {
                    id = rs.getString(1);
                    name = rs.getString(2);
                    cont = rs.getString(3);
                    dname = rs.getString(4);
                    date = rs.getString(5);
                    st = rs.getString(6);
                    uid = rs.getString(7);

                    String[] row = {id, name, cont, dname, date, st, uid};
                    model.addRow(row);
                }

            }

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        Login l = new Login();
        dispose();
        l.show();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        jTextField5.setText("");
        jTextField6.setText("");
        jPasswordField1.setText("");
        jTextField3.setText("");
        jTextField4.setText("");
        jTextField2.setText("");
        jTextField1.setText("");
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        try {
            Email_validation v = new Email_validation();

            if (jTextField5.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Enter a ID");
                jTextField5.requestFocus();
            } else if (jTextField6.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Enter a Name");
                jTextField6.requestFocus();
            } else if (jPasswordField1.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Enter a Password");
                jPasswordField1.requestFocus();
            } else if (jTextField3.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Enter a Address");
                jTextField3.requestFocus();
            } else if (jTextField1.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Enter a email");
                jTextField1.requestFocus();
            } else if (!v.isvalid(jTextField1.getText())) {
                JOptionPane.showMessageDialog(null, "invalid Email");
                jTextField1.setText("");
                jTextField1.requestFocus();
            } else if (jTextField2.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Enter which Specialist your are");
                jTextField2.requestFocus();
            } else if (jTextField4.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Enter a 10 digit number");
                jTextField4.requestFocus();
            } else {
                //validating mobile number is 10 digit
                String number = jTextField4.getText();
                number = number.replace(" ", ""); //if user use space in the mobile field
                boolean valid = number.matches("[0-9]{9,10}");
                if (valid == false) {
                    JOptionPane.showMessageDialog(null, "Enter a 10 digit number");
                    jTextField4.setText("");
                    jTextField4.requestFocus();
                } else {
                    try {
                        String ID = jTextField5.getText();
                        if (ID.equals(id)) {

                            String Name = jTextField6.getText();
                            String pass = jPasswordField1.getText();
                            String Address = jTextField3.getText();
                            int mobile = Integer.parseInt(jTextField4.getText());
                            String email = jTextField1.getText();
                            String special = jTextField2.getText();

                            String sql = "UPDATE details SET FullName=?,Password=?,Address=?,Mobile=?,Email=?,Specialist=?,Type=? WHERE ID=?;";
                            PreparedStatement p = con.prepareStatement(sql);

                            p.setString(1, Name);
                            p.setString(2, pass);
                            p.setString(3, Address);
                            p.setInt(4, mobile);
                            p.setString(5, email);
                            p.setString(6, special);
                            p.setString(7, "Doctor");
                            p.setString(8, ID);
                            p.executeUpdate();
                            JOptionPane.showMessageDialog(null, "Update Complete");
                        } else {
                            JOptionPane.showMessageDialog(null, "Doctor ID Cannot be Change");
                            jTextField5.setText("");
                            jTextField5.requestFocus();

                        }
                    } catch (Exception ex) {
                        JOptionPane.showMessageDialog(null, ex);
                    }
                }
            }

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
        // TODO add your handling code here:
        jTable1.setModel(new DefaultTableModel());
        String Name = "";
        try {
            //if clicked again refresh the table to avoid the duplicate values
            String search = jTextField7.getText();
            if (search.equals("")) {
                JOptionPane.showMessageDialog(null, "Enter a valid input Doctor Id,Name or which Specialist you want to Know ");
                try {
                    //if clicked again refresh the table to avoid the duplicate values
                    jTable1.setModel(new DefaultTableModel());
                    String columnName = "Type";
                    String conditionValue = "Doctor";
                    String qry = "Select Id,FullName,Specialist from details Where Type='Doctor'";
                    PreparedStatement p = con.prepareStatement(qry);
                    ResultSet rs = p.executeQuery(qry);
                    ResultSetMetaData rsmd = rs.getMetaData();
                    DefaultTableModel model = (DefaultTableModel) jTable1.getModel();

                    int cols = rsmd.getColumnCount();
                    String[] colName = new String[cols];
                    for (int i = 0; i < cols; i++) {
                        colName[i] = rsmd.getColumnName(i + 1);
                        model.setColumnIdentifiers(colName);

                        String id, name, sp;
                        while (rs.next()) {
                            id = rs.getString(1);
                            name = rs.getString(2);
                            sp = rs.getString(3);

                            String[] row = {id, name, sp};
                            model.addRow(row);
                        }

                    }

                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(null, ex);
                }

                //second table view
                try {
                    //if clicked again refresh the table to avoid the duplicate values
                    jTable3.setModel(new DefaultTableModel());
                    String columnName = "Type";
                    String conditionValue = "Doctor";
                    String qry = "Select * from doctor_available";
                    PreparedStatement p = con.prepareStatement(qry);
                    ResultSet rs = p.executeQuery(qry);
                    ResultSetMetaData rsmd = rs.getMetaData();
                    DefaultTableModel model = (DefaultTableModel) jTable3.getModel();

                    int cols = rsmd.getColumnCount();
                    String[] colName = new String[cols];
                    for (int i = 0; i < cols; i++) {
                        colName[i] = rsmd.getColumnName(i + 1);
                        model.setColumnIdentifiers(colName);

                        String id, name, st, date, sp;
                        while (rs.next()) {
                            id = rs.getString(1);
                            name = rs.getString(2);
                            st = rs.getString(3);
                            date = rs.getString(4);
                            sp = rs.getString(5);

                            String[] row = {id, name, st, date, sp};
                            model.addRow(row);
                        }

                    }

                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(null, ex);
                }
            } else {

                PreparedStatement p = con.prepareStatement("Select Id,FullName,Specialist from details Where Type='Doctor' AND id=? OR FullName=? OR Specialist=?");
                p.setString(1, search);
                p.setString(2, search);
                p.setString(3, search);
                ResultSet rs = p.executeQuery();
                ResultSetMetaData rsmd = rs.getMetaData();
                DefaultTableModel model = (DefaultTableModel) jTable1.getModel();

                int cols = rsmd.getColumnCount();
                String[] colName = new String[cols];
                for (int i = 0; i < cols; i++) {
                    colName[i] = rsmd.getColumnName(i + 1);
                    model.setColumnIdentifiers(colName);

                    String id, name, sp;
                    while (rs.next()) {
                        id = rs.getString(1);
                        name = rs.getString(2);
                        sp = rs.getString(3);
                        Name = name;
                        String[] row = {id, name, sp};
                        model.addRow(row);
                    }

                }
                if (Name.equals("")) {
                    JOptionPane.showMessageDialog(null, "NO Result found");
                    try {
                        //if clicked again refresh the table to avoid the duplicate values
                        jTable1.setModel(new DefaultTableModel());

                        String qry = "Select Id,FullName,Specialist from details Where Type='Doctor'";
                        PreparedStatement p1 = con.prepareStatement(qry);
                        ResultSet rs1 = p1.executeQuery(qry);
                        ResultSetMetaData rsmd1 = rs1.getMetaData();
                        DefaultTableModel model1 = (DefaultTableModel) jTable1.getModel();

                        int cols1 = rsmd1.getColumnCount();
                        String[] colName1 = new String[cols1];
                        for (int i = 0; i < cols1; i++) {
                            colName1[i] = rsmd1.getColumnName(i + 1);
                            model1.setColumnIdentifiers(colName1);

                            String id, name, sp;
                            while (rs1.next()) {
                                id = rs1.getString(1);
                                name = rs1.getString(2);
                                sp = rs1.getString(3);

                                String[] row1 = {id, name, sp};
                                model1.addRow(row1);
                            }

                        }

                    } catch (Exception ex) {
                        JOptionPane.showMessageDialog(null, ex);
                    }
                }
            }

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
        try {

            String search = jTextField8.getText();
            String Name = "";
            if (search.equals("")) {
                JOptionPane.showMessageDialog(null, "Enter a valid input Doctor Id,Name or which Specialist you want to Know ");
                jTextField8.setText("");
                jTextField8.requestFocus();
            } else {
                //if clicked again refresh the table to avoid the duplicate values
                jTable3.setModel(new DefaultTableModel());
                String columnName = "Type";
                String conditionValue = "Doctor";

                String qry = "Select * from doctor_available Where ID=? OR Doctor_name=? OR Specialist=?";
                PreparedStatement p = con.prepareStatement(qry);
                p.setString(1, search);
                p.setString(2, search);
                p.setString(3, search);

                ResultSet rs = p.executeQuery();
                ResultSetMetaData rsmd = rs.getMetaData();
                DefaultTableModel model = (DefaultTableModel) jTable3.getModel();

                int cols = rsmd.getColumnCount();
                String[] colName = new String[cols];
                for (int i = 0; i < cols; i++) {
                    colName[i] = rsmd.getColumnName(i + 1);
                    model.setColumnIdentifiers(colName);

                    String id, name, st, date, sp;
                    while (rs.next()) {
                        id = rs.getString(1);
                        name = rs.getString(2);
                        st = rs.getString(3);
                        date = rs.getString(4);
                        sp = rs.getString(5);
                        Name = name;

                        String[] row = {id, name, st, date, sp};
                        model.addRow(row);
                    }
                }
                jTextField8.setText("");
                jTextField8.requestFocus();

                if (Name.equals("")) {
                    JOptionPane.showMessageDialog(null, "NO Result found");
                    try {

                        jTable3.setModel(new DefaultTableModel());

                        String qry1 = "Select * from doctor_available";
                        PreparedStatement p1 = con.prepareStatement(qry1);
                        ResultSet rs1 = p1.executeQuery();
                        ResultSetMetaData rsmd1 = rs1.getMetaData();
                        DefaultTableModel model1 = (DefaultTableModel) jTable3.getModel();

                        int cols1 = rsmd1.getColumnCount();
                        String[] colName1 = new String[cols1];
                        for (int i = 0; i < cols1; i++) {
                            colName1[i] = rsmd1.getColumnName(i + 1);
                            model1.setColumnIdentifiers(colName1);

                            String id, name, st, date, sp;
                            while (rs1.next()) {
                                id = rs1.getString(1);
                                name = rs1.getString(2);
                                st = rs1.getString(3);
                                date = rs1.getString(4);
                                sp = rs1.getString(5);
                                Name = name;

                                String[] row1 = {id, name, st, date, sp};
                                model1.addRow(row1);
                            }
                        }
                        jTextField8.setText("");
                        jTextField8.requestFocus();

                    } catch (Exception ex) {
                        JOptionPane.showMessageDialog(null, ex);
                    }
                }
            }

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        // TODO add your handling code here:
        jTabbedPane1.setSelectedIndex(4);
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        // TODO add your handling code here:
        jTextField21.setText("");
        jTextField22.setText("");

        jTextField23.setText("");
        jTextField24.setText("");
        jTextField21.requestFocus();
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        // TODO add your handling code here:
        try {
            if (jTextField21.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Enter a ID");
                jTextField21.requestFocus();
            } else if (jTextField22.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Enter a User Name");
                jTextField22.requestFocus();
            } else if (jTextField23.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Enter a 10 digit mobile number");
                jTextField23.requestFocus();
            } else if (jTextField24.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Enter a Doctor Name");
                jTextField24.requestFocus();
            } else {
                //validating mobile number is 10 digit
                String number = jTextField23.getText();
                number = number.replace(" ", ""); //if user use space in the mobile field
                boolean valid = number.matches("[0-9]{9,10}");
                if (valid == false) {
                    JOptionPane.showMessageDialog(null, "Enter a 10 digit number");
                    jTextField23.setText("");
                    jTextField23.requestFocus();
                } else {
                    try {
                        String bid = jTextField21.getText();
                        PreparedStatement p2 = con.prepareStatement("Select * from appointment_details where id=?");
                        p2.setString(1, bid);
                        ResultSet rs = p2.executeQuery();
                        if (rs.next()) {
                            JOptionPane.showMessageDialog(null, "Booking ID Already Taken");
                            jTextField21.setText("");
                            jTextField21.requestFocus();
                        } else {
                            String Doc = jTextField24.getText();
                            PreparedStatement p3 = con.prepareStatement("Select * from details where Type='Doctor' AND FullName=?");
                            p3.setString(1, Doc);
                            ResultSet rs1 = p3.executeQuery();
                            if (rs1.next()) {

                                String Name = jTextField22.getText();
                                // String Doc = jTextField24.getText();
                                String date = ((JTextField) jDateChooser2.getDateEditor().getUiComponent()).getText();
                                int mobile = Integer.parseInt(jTextField23.getText());

                                //convert date string to date format
                                //Date date1=Date.valueOf(date);
                                PreparedStatement p = con.prepareStatement("insert into appointment_details values(?,?,?,?,?,?,?)");
                                p.setString(1, bid);
                                p.setString(2, Name);
                                p.setInt(3, mobile);
                                p.setString(4, Doc);
                                p.setString(5, date);
                                p.setString(6, "On Process");
                                p.setString(7, id);
                                p.executeUpdate();
                                JOptionPane.showMessageDialog(null, "Booking Complete");

                                jTextField21.setText("");
                                jTextField22.setText("");

                                jTextField23.setText("");
                                jTextField24.setText("");
                                jTextField21.requestFocus();

                            } else {
                                JOptionPane.showMessageDialog(null, "Doctor Not Found");
                                jTextField24.setText("");
                                jTextField24.requestFocus();
                            }
                        }
                    } catch (Exception ex) {
                        JOptionPane.showMessageDialog(null, ex);
                    }
                }
            }
        } catch (Exception ex) {

        }
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        // TODO add your handling code here:
        jTabbedPane1.setSelectedIndex(5);

        try {
            //if clicked again refresh the table to avoid the duplicate values
            jTable4.setModel(new DefaultTableModel());

            String qry = "Select * from appointment_details Where UserID=?";
            PreparedStatement p = con.prepareStatement(qry);
            p.setString(1, id);
            ResultSet rs = p.executeQuery();
            ResultSetMetaData rsmd = rs.getMetaData();
            DefaultTableModel model = (DefaultTableModel) jTable4.getModel();

            int cols = rsmd.getColumnCount();
            String[] colName = new String[cols];
            for (int i = 0; i < cols; i++) {
                colName[i] = rsmd.getColumnName(i + 1);
                model.setColumnIdentifiers(colName);

                String bid, name, cont, doc, date, st, ID;
                while (rs.next()) {
                    bid = rs.getString(1);
                    name = rs.getString(2);
                    cont = rs.getString(3);
                    doc = rs.getString(4);
                    date = rs.getString(5);
                    st = rs.getString(6);
                    ID = rs.getString(7);
                    String[] row = {bid, name, cont, doc, date, st, ID};
                    model.addRow(row);
                }

            }

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
    }//GEN-LAST:event_jButton13ActionPerformed

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        // TODO add your handling code here:
        try {
            String Book = jTextField9.getText();
            if (jTextField9.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Booking ID Cannot be Empty");
                jTextField9.setText("");
                jTextField9.requestFocus();
            } else {
                PreparedStatement p2 = con.prepareStatement("Select * from appointment_details Where ID=? AND UserID=?");
                p2.setString(1, Book);
                p2.setString(2, id);
                ResultSet rs6 = p2.executeQuery();
                if (rs6.next()) {
                    String bid1 = jTextField9.getText();
                    PreparedStatement p1 = con.prepareStatement("Delete From appointment_details Where ID=?");
                    p1.setString(1, bid1);
                    p1.executeUpdate();
                    JOptionPane.showMessageDialog(null, "Cancel Complete");
                    jTextField9.setText("");
                    try {
                        //if clicked again refresh the table to avoid the duplicate values
                        jTable4.setModel(new DefaultTableModel());

                        String qry = "Select * from appointment_details Where UserID=?";
                        PreparedStatement p = con.prepareStatement(qry);
                        p.setString(1, id);
                        ResultSet rs = p.executeQuery();
                        ResultSetMetaData rsmd = rs.getMetaData();
                        DefaultTableModel model = (DefaultTableModel) jTable4.getModel();

                        int cols = rsmd.getColumnCount();
                        String[] colName = new String[cols];
                        for (int i = 0; i < cols; i++) {
                            colName[i] = rsmd.getColumnName(i + 1);
                            model.setColumnIdentifiers(colName);

                            String bid, name, cont, doc, date, st, ID;
                            while (rs.next()) {
                                bid = rs.getString(1);
                                name = rs.getString(2);
                                cont = rs.getString(3);
                                doc = rs.getString(4);
                                date = rs.getString(5);
                                st = rs.getString(6);
                                ID = rs.getString(7);
                                String[] row = {bid, name, cont, doc, date, st, ID};
                                model.addRow(row);
                            }

                        }

                    } catch (Exception ex) {
                        JOptionPane.showMessageDialog(null, ex);
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Booking Id not Found");
                    jTextField9.setText("");
                    jTextField9.requestFocus();
                }
            }

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
    }//GEN-LAST:event_jButton14ActionPerformed

    private void jButton15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton15ActionPerformed
        // TODO add your handling code here:
        jTabbedPane1.setSelectedIndex(4);
    }//GEN-LAST:event_jButton15ActionPerformed

    private void jButton16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton16ActionPerformed
        // TODO add your handling code here:
        jTable2.setModel(new DefaultTableModel());
        String Name = "";
        try {
            //if clicked again refresh the table to avoid the duplicate values
            String search = jTextField10.getText();
            if (search.equals("")) {
                JOptionPane.showMessageDialog(null, "Enter a valid input Booking Id OR Patient Name");
                jTextField10.setText("");
                jTextField10.requestFocus();
                String dname = "";

                String qry2 = "Select * from details where ID=?";
                PreparedStatement p2 = con.prepareStatement(qry2);
                p2.setString(1, id);
                ResultSet rs2 = p2.executeQuery();
                while (rs2.next()) {
                    dname = rs2.getString(2);
                }
                jTable2.setModel(new DefaultTableModel());

                String qry = "Select * from appointment_details where Doctor_Name=?";
                PreparedStatement p1 = con.prepareStatement(qry);
                p1.setString(1, dname);
                ResultSet rs1 = p1.executeQuery();
                ResultSetMetaData rsmd1 = rs1.getMetaData();
                DefaultTableModel model1 = (DefaultTableModel) jTable2.getModel();

                int cols1 = rsmd1.getColumnCount();
                String[] colName1 = new String[cols1];
                for (int i = 0; i < cols1; i++) {
                    colName1[i] = rsmd1.getColumnName(i + 1);
                    model1.setColumnIdentifiers(colName1);

                    String id, name, cont, date, st, uid;
                    while (rs1.next()) {
                        id = rs1.getString(1);
                        name = rs1.getString(2);
                        cont = rs1.getString(3);
                        dname = rs1.getString(4);
                        date = rs1.getString(5);
                        st = rs1.getString(6);
                        uid = rs1.getString(7);

                        String[] row1 = {id, name, cont, dname, date, st, uid};
                        model1.addRow(row1);
                    }

                }

            } else {

                PreparedStatement p = con.prepareStatement("Select * from appointment_details Where ID=? OR Patient_Name=?");
                p.setString(1, search);
                p.setString(2, search);
                ResultSet rs = p.executeQuery();
                ResultSetMetaData rsmd = rs.getMetaData();
                DefaultTableModel model = (DefaultTableModel) jTable2.getModel();

                int cols = rsmd.getColumnCount();
                String[] colName = new String[cols];
                for (int i = 0; i < cols; i++) {
                    colName[i] = rsmd.getColumnName(i + 1);
                    model.setColumnIdentifiers(colName);

                    String id, name, cont, dname, app, st, uid;
                    while (rs.next()) {
                        id = rs.getString(1);
                        name = rs.getString(2);
                        cont = rs.getString(3);
                        dname = rs.getString(4);
                        app = rs.getString(5);
                        st = rs.getString(6);
                        uid = rs.getString(7);
                        Name = name;
                        String[] row = {id, name, cont, dname, app, st, uid};
                        model.addRow(row);
                    }

                }
                if (Name.equals("")) {
                    JOptionPane.showMessageDialog(null, "NO Result found");
                    String dname = "";

                    String qry2 = "Select * from details where ID=?";
                    PreparedStatement p2 = con.prepareStatement(qry2);
                    p2.setString(1, id);
                    ResultSet rs2 = p2.executeQuery();
                    while (rs2.next()) {
                        dname = rs2.getString(2);
                    }
                    jTable2.setModel(new DefaultTableModel());

                    String qry = "Select * from appointment_details where Doctor_Name=?";
                    PreparedStatement p1 = con.prepareStatement(qry);
                    p1.setString(1, dname);
                    ResultSet rs1 = p1.executeQuery();
                    ResultSetMetaData rsmd1 = rs1.getMetaData();
                    DefaultTableModel model1 = (DefaultTableModel) jTable2.getModel();

                    int cols1 = rsmd1.getColumnCount();
                    String[] colName1 = new String[cols1];
                    for (int i = 0; i < cols1; i++) {
                        colName1[i] = rsmd1.getColumnName(i + 1);
                        model1.setColumnIdentifiers(colName1);

                        String id, name, cont, date, st, uid;
                        while (rs1.next()) {
                            id = rs1.getString(1);
                            name = rs1.getString(2);
                            cont = rs1.getString(3);
                            dname = rs1.getString(4);
                            date = rs1.getString(5);
                            st = rs1.getString(6);
                            uid = rs1.getString(7);

                            String[] row1 = {id, name, cont, dname, date, st, uid};
                            model1.addRow(row1);
                        }

                    }

                }
            }

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
    }//GEN-LAST:event_jButton16ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DoctorHome.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DoctorHome.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DoctorHome.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DoctorHome.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DoctorHome("").setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton16;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private com.toedter.calendar.JDateChooser jDateChooser2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private javax.swing.JTable jTable4;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField10;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField21;
    private javax.swing.JTextField jTextField22;
    private javax.swing.JTextField jTextField23;
    private javax.swing.JTextField jTextField24;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JTextField jTextField9;
    // End of variables declaration//GEN-END:variables
}
